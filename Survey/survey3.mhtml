From: <Saved by Blink>
Snapshot-Content-Location: http://101.43.165.133:5173/ans?id=3
Subject: SVulD
Date: Sun, 29 Jan 2023 09:03:57 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--ZsgQWMp86sQeRHgtGTIEquPbggicGkcWaCMUKTzzJi----"


------MultipartBoundary--ZsgQWMp86sQeRHgtGTIEquPbggicGkcWaCMUKTzzJi----
Content-Type: text/html
Content-ID: <frame-8D9C21B8291FCA2526EAED9146925794@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://101.43.165.133:5173/ans?id=3

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-b06e2837-dc56-4f47-be69-c39a484fd6c3@mhtml.blink" /><l=
ink rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-083693bd-a50f-4546=
-9d2e-2008ae4eebd7@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css=
" href=3D"cid:css-c6521d34-3576-42fc-97bf-7bb0fa9cf435@mhtml.blink" /><link=
 rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-b67bc66d-99f1-4767-87=
31-4d3c0c7af5c1@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" h=
ref=3D"cid:css-8bb63cc5-0913-4794-9f05-9fd988ff0b9a@mhtml.blink" />
   =20

   =20

   =20
    <link rel=3D"icon" type=3D"image/svg+xml" href=3D"http://101.43.165.133=
:5173/vite.svg">
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0">
    <title>SVulD</title>
  </head>
  <body>
    <div id=3D"root"><div class=3D"Toastify"></div><div class=3D"sticky top=
-0 z-50 backdrop-blur flex flex-row items-center py-2 px-4 border-b shadow =
"><svg class=3D"icon" viewBox=3D"0 0 1047 1024" version=3D"1.1" xmlns=3D"ht=
tp://www.w3.org/2000/svg" width=3D"40" height=3D"40"><path d=3D"M69.824877 =
0c6.475982 0 12.919233 0.900091 19.145059 2.673388l435.696804 124.142466L95=
8.333078 2.74937c34.425571-9.849571 70.218813 7.927817 83.65589 40.179141l2=
.692091 7.692859A69.726685 69.726685 0 0 1 1047.378995 69.827215v884.236858=
c0 38.535598-31.262393 69.774612-69.824876 69.774612-6.52274 0-13.013918-0.=
914119-19.284165-2.714301L526.343014 897.052055 88.907982 1021.325443c-34.4=
45443 9.779434-70.202447-8.070429-83.572895-40.349808l-2.676895-7.698703A69=
.726685 69.726685 0 0 1 0 954.207854V69.774612C0 31.239014 31.262393 0 69.8=
24877 0z m0 69.774612v884.433242l447.091726-126.928073a34.937571 34.937571 =
0 0 1 19.182465 0.029224l441.453882 126.755068V69.828384l-443.218996 126.80=
884a34.937571 34.937571 0 0 1-19.182465 0.011689L69.824877 69.774612zM315.0=
31963 265.351598c58.426447 0 105.789954 47.363507 105.789955 105.789955 0 2=
2.324603-6.915507 43.033717-18.720731 60.10389l89.625717 118.971032A105.671=
89 105.67189 0 0 1 525.442922 544.730594c13.536438 0 26.47905 2.542466 38.3=
76621 7.176182l75.285041-69.3421C634.031342 470.191342 631.232877 456.64555=
3 631.232877 442.447489c0-58.426447 47.363507-105.789954 105.789954-105.789=
955s105.789954 47.363507 105.789954 105.789955-47.363507 105.789954-105.789=
954 105.789954c-18.831781 0-36.514484-4.921279-51.831233-13.54579l-68.18717=
8 62.802995C626.052091 613.084932 631.232877 631.197808 631.232877 650.5205=
48c0 58.426447-47.363507 105.789954-105.789955 105.789954S419.652968 708.94=
6995 419.652968 650.520548c0-21.257352 6.269078-41.04884 17.059653-57.62922=
4l-90.804018-120.536256A105.780603 105.780603 0 0 1 315.031963 476.931507c-=
58.426447 0-105.789954-47.363507-105.789954-105.789954s47.363507-105.789954=
 105.789954-105.789955z m210.410959 349.905242c-19.474703 0-35.263708 15.78=
7836-35.263707 35.263708 0 19.474703 15.787836 35.263708 35.263707 35.26370=
8 19.474703 0 35.263708-15.787836 35.263708-35.263708 0-19.474703-15.787836=
-35.263708-35.263708-35.263708z m211.579909-208.073059c-19.474703 0-35.2637=
08 15.787836-35.263708 35.263708 0 19.474703 15.787836 35.263708 35.263708 =
35.263707 19.474703 0 35.263708-15.787836 35.263708-35.263707 0-19.474703-1=
5.787836-35.263708-35.263708-35.263708z m-421.990868-71.305936c-19.474703 0=
-35.263708 15.787836-35.263707 35.263708 0 19.474703 15.787836 35.263708 35=
.263707 35.263707 19.474703 0 35.263708-15.787836 35.263708-35.263707 0-19.=
474703-15.787836-35.263708-35.263708-35.263708z"></path></svg>   <span clas=
s=3D"ml-2 font-bold text-xl">SVulD</span></div><div class=3D"pt-4 pb-10 min=
:h-screen  flex justify-items-center bg-gray-50 "><div class=3D"flex flex-c=
ol justify-items-center w-1/2 mx-auto space-y-4"><div class=3D"w-full bg-wh=
ite rounded-xl px-6 py-4 flex flex-col space-y-2"><h1 class=3D"text-base te=
xt-black  text-ellipsis text-lg "></h1><div class=3D"bg-blue-200 rounded-xl=
 px-4 py-2 flex flex-col space-y-1.5"><span class=3D"font-bold text-lg text=
-gray-500 ">Summary: </span><p class=3D"indent-8">Several protocol parsers =
in tcpdump before 4.9.2 could cause a buffer over-read in addrtoname.c:look=
up_bytestring().</p></div><div class=3D"bg-green-200 rounded-xl px-4 py-2 f=
lex flex-col space-y-1.5"><span class=3D"font-bold text-lg text-gray-500 ">=
Type: </span><p class=3D"indent-8">NaN</p></div><div class=3D"bg-red-200 ro=
unded-xl px-4 py-2 flex flex-col space-y-1.5"><span class=3D"font-bold text=
-lg text-gray-500 ">Ref: </span><p class=3D"indent-8">https://www.cvedetail=
s.com/cve/CVE-2017-12894/</p></div></div></div></div><div class=3D"pt-4 pb-=
10 min:h-screen flex justify-items-center bg-gray-50 "><div class=3D"flex f=
lex-col justify-items-center w-9/10 mx-auto space-y-4"><div class=3D"react-=
code-diff-lite auto"><div class=3D"d2h-wrapper">
    <div id=3D"d2h-9" class=3D"d2h-file-wrapper" data-lang=3D"">
    <div class=3D"d2h-file-header">
      <span class=3D"d2h-file-name-wrapper">
    <svg aria-hidden=3D"true" class=3D"d2h-icon" height=3D"16" version=3D"1=
.1" viewBox=3D"0 0 12 16" width=3D"12">
        <path d=3D"M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v=
1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7=
.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z"></path>
    </svg>    <span class=3D"d2h-file-name">	</span>
    <span class=3D"d2h-tag d2h-changed d2h-changed-tag">CHANGED</span></spa=
n>
<label class=3D"d2h-file-collapse">
    <input class=3D"d2h-file-collapse-input" type=3D"checkbox" name=3D"view=
ed" value=3D"viewed">
    Viewed
</label>
    </div>
    <div class=3D"d2h-files-diff">
        <div class=3D"d2h-file-side-diff">
            <div class=3D"d2h-code-wrapper">
                <table class=3D"d2h-diff-table">
                    <tbody class=3D"d2h-diff-tbody">
                    <tr>
    <td class=3D"d2h-code-side-linenumber d2h-info"></td>
    <td class=3D"d2h-info">
        <div class=3D"d2h-code-side-line d2h-info">@@ -1,42 +1,44 @@</div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      1
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> lookup_bytestring(netd=
issect_options *ndo, register const u_char *bs,</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      2
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 		  const unsigned int=
 nlen)</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      3
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> {</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      4
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code>	struct <del>enamemem</=
del> *tp;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      5
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 	register u_int i, j, =
k;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      6
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> </code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      7
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 	if (nlen &gt;=3D 6) {=
</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      8
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>		k =3D (bs[0] &lt;&lt;=
 8) | bs[1];</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      9
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>		j =3D (bs[2] &lt;&lt;=
 8) | bs[3];</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      10
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>		i =3D (bs[4] &lt;&lt;=
 8) | bs[5];</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      11
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>	} else if (nlen &gt;=
=3D 4) {</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      12
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>		k =3D (bs[0] &lt;&lt;=
 8) | bs[1];</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      13
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>		j =3D (bs[2] &lt;&lt;=
 8) | bs[3];</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      14
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>		i =3D 0;</code></span=
>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      15
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>	} else</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      16
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 		i =3D j =3D k =3D 0;=
</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      17
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> </code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      18
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 	tp =3D &amp;bytestrin=
gtable[(i ^ j) &amp; (HASHNAMESIZE-1)];</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      19
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code>	while (tp-&gt;<del>e_n=
xt</del>)</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-code-side-emptyplaceholder d2=
h-cntx d2h-emptyplaceholder">
     =20
    </td>
    <td class=3D"d2h-cntx d2h-emptyplaceholder">
        <div class=3D"d2h-code-side-line d2h-code-side-emptyplaceholder d2h=
-cntx d2h-emptyplaceholder">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code><br></code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      20
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code><del>		if (</del>tp-&gt=
;<del>e_addr0</del> =3D=3D i &amp;&amp;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      21
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code>		    tp-&gt;<del>e_add=
r1</del> =3D=3D j &amp;&amp;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      22
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code>		    tp-&gt;<del>e_add=
r2</del> =3D=3D k &amp;&amp;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      23
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code>		    memcmp((const cha=
r *)bs, (const char *)(tp-&gt;<del>e_bs</del>), nlen) =3D=3D 0)</code></spa=
n>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      24
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 			return tp;</code></=
span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      25
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 		else</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      26
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code>			tp =3D tp-&gt;<del>e=
_nxt</del>;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      27
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> </code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      28
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code>	tp-&gt;<del>e_addr0</d=
el> =3D i;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      29
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code>	tp-&gt;<del>e_addr1</d=
el> =3D j;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      30
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code>	tp-&gt;<del>e_addr2</d=
el> =3D k;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      31
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> </code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      32
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code>	tp-&gt;<del>e_bs</del>=
 =3D (u_char *) calloc(1, nlen + 1);</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      33
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code>	if (tp-&gt;<del>e_bs</=
del> =3D=3D NULL)</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      34
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 		(*ndo-&gt;ndo_error)=
(ndo, "lookup_bytestring: calloc");</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      35
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> </code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      36
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code>	memcpy(tp-&gt;<del>e_b=
s</del>, bs, nlen);</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-code-side-emptyplaceholder d2=
h-cntx d2h-emptyplaceholder">
     =20
    </td>
    <td class=3D"d2h-cntx d2h-emptyplaceholder">
        <div class=3D"d2h-code-side-line d2h-code-side-emptyplaceholder d2h=
-cntx d2h-emptyplaceholder">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code><br></code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      37
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code>	tp-&gt;<del>e_nxt</del=
> =3D (struct <del>enamemem</del> *)calloc(1, sizeof(*tp));</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-del d2h-change">
      38
    </td>
    <td class=3D"d2h-del d2h-change">
        <div class=3D"d2h-code-side-line d2h-del d2h-change">
            <span class=3D"d2h-code-line-prefix">-</span>
            <span class=3D"d2h-code-line-ctn"><code>	if (tp-&gt;<del>e_nxt<=
/del> =3D=3D NULL)</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      39
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 		(*ndo-&gt;ndo_error)=
(ndo, "lookup_bytestring: calloc");</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      40
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> </code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      41
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 	return tp;</code></sp=
an>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      42
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>}</code></span>
        </div>
    </td>
</tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class=3D"d2h-file-side-diff">
            <div class=3D"d2h-code-wrapper">
                <table class=3D"d2h-diff-table">
                    <tbody class=3D"d2h-diff-tbody">
                    <tr>
    <td class=3D"d2h-code-side-linenumber d2h-info"></td>
    <td class=3D"d2h-info">
        <div class=3D"d2h-code-side-line d2h-info"></div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      1
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> lookup_bytestring(netd=
issect_options *ndo, register const u_char *bs,</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      2
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 		  const unsigned int=
 nlen)</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      3
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> {</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      4
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>	struct <ins>bsnamemem<=
/ins> *tp;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      5
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 	register u_int i, j, =
k;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      6
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> </code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      7
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 	if (nlen &gt;=3D 6) {=
</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      8
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>		k =3D (bs[0] &lt;&lt;=
 8) | bs[1];</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      9
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>		j =3D (bs[2] &lt;&lt;=
 8) | bs[3];</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      10
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>		i =3D (bs[4] &lt;&lt;=
 8) | bs[5];</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      11
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>	} else if (nlen &gt;=
=3D 4) {</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      12
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>		k =3D (bs[0] &lt;&lt;=
 8) | bs[1];</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      13
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>		j =3D (bs[2] &lt;&lt;=
 8) | bs[3];</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      14
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>		i =3D 0;</code></span=
>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      15
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>	} else</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      16
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 		i =3D j =3D k =3D 0;=
</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      17
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> </code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      18
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 	tp =3D &amp;bytestrin=
gtable[(i ^ j) &amp; (HASHNAMESIZE-1)];</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      19
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>	while (tp-&gt;<ins>bs_=
nxt</ins>)</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins">
      20
    </td>
    <td class=3D"d2h-ins">
        <div class=3D"d2h-code-side-line d2h-ins">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>		if (nlen =3D=3D tp-&g=
t;bs_nbytes &amp;&amp;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      21
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code><ins>		    </ins>tp-&gt=
;<ins>bs_addr0</ins> =3D=3D i &amp;&amp;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      22
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>		    tp-&gt;<ins>bs_ad=
dr1</ins> =3D=3D j &amp;&amp;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      23
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>		    tp-&gt;<ins>bs_ad=
dr2</ins> =3D=3D k &amp;&amp;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      24
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>		    memcmp((const cha=
r *)bs, (const char *)(tp-&gt;<ins>bs_bytes</ins>), nlen) =3D=3D 0)</code><=
/span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      25
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 			return tp;</code></=
span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      26
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 		else</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      27
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>			tp =3D tp-&gt;<ins>b=
s_nxt</ins>;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      28
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> </code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      29
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>	tp-&gt;<ins>bs_addr0</=
ins> =3D i;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      30
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>	tp-&gt;<ins>bs_addr1</=
ins> =3D j;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      31
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>	tp-&gt;<ins>bs_addr2</=
ins> =3D k;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      32
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> </code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      33
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>	tp-&gt;<ins>bs_bytes</=
ins> =3D (u_char *) calloc(1, nlen + 1);</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      34
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>	if (tp-&gt;<ins>bs_byt=
es</ins> =3D=3D NULL)</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      35
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 		(*ndo-&gt;ndo_error)=
(ndo, "lookup_bytestring: calloc");</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      36
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> </code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      37
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>	memcpy(tp-&gt;<ins>bs_=
bytes</ins>, bs, nlen);</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins">
      38
    </td>
    <td class=3D"d2h-ins">
        <div class=3D"d2h-code-side-line d2h-ins">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>	tp-&gt;bs_nbytes =3D n=
len;</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      39
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>	tp-&gt;<ins>bs_nxt</in=
s> =3D (struct <ins>bsnamemem</ins> *)calloc(1, sizeof(*tp));</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-ins d2h-change">
      40
    </td>
    <td class=3D"d2h-ins d2h-change">
        <div class=3D"d2h-code-side-line d2h-ins d2h-change">
            <span class=3D"d2h-code-line-prefix">+</span>
            <span class=3D"d2h-code-line-ctn"><code>	if (tp-&gt;<ins>bs_nxt=
</ins> =3D=3D NULL)</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      41
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 		(*ndo-&gt;ndo_error)=
(ndo, "lookup_bytestring: calloc");</code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      42
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> </code></span>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      43
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code> 	return tp;</code></sp=
an>
        </div>
    </td>
</tr><tr>
    <td class=3D"d2h-code-side-linenumber d2h-cntx">
      44
    </td>
    <td class=3D"d2h-cntx">
        <div class=3D"d2h-code-side-line d2h-cntx">
            <span class=3D"d2h-code-line-prefix">&nbsp;</span>
            <span class=3D"d2h-code-line-ctn"><code>}</code></span>
        </div>
    </td>
</tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
</div></div></div></div><div class=3D"pt-4 pb-10 flex justify-items-center =
bg-gray-50 "><div class=3D"flex flex-col justify-items-center w-1/2 mx-auto=
 space-y-4"><div class=3D"w-full bg-white rounded-xl px-6 py-4 flex flex-co=
l space-y-2"><h1 class=3D"justify-self-center text-base text-black text-ell=
ipsis text-5xl ">Answer: 1</h1><div class=3D"bg-orange-200 rounded-xl px-4 =
py-2 flex flex-col space-y-1.5"><span class=3D"font-bold text-lg text-gray-=
500 ">Post Question:</span><p class=3D"text-base text-black  text-ellipsis =
text-lg "><p>I am having an issue adding to my binary search tree, my progr=
am seems to be adding to a temporary structure instead. I think that in ord=
er for it to work correctly I have to call malloc for the left and right no=
des before I set  the variable node to part of the structure. I am just not=
 sure where in the code to use malloc so the rest of it still works =3D/</p=
>

<pre><code class=3D"hljs language-xl"> typedef struct BiTree_ {
   BiTreeNode *root;
   int size;
} BiTree;

    typedef struct BitTreeData_ {
   char *str;
   int diff;
   int start_count;
   int end_count;
   int hidden;
} BiTreeData;

 typedef struct BiTreeNode_ {
    BiTreeData *<span class=3D"hljs-keyword">data</span>;
    struct BiTreeNode_ *right;
    struct BiTreeNode_ *left;
} BiTreeNode;

    int
bitree_insert(BiTree *<span class=3D"hljs-keyword">tree</span>, BiTreeNode =
*node, char *str)
{
    <span class=3D"hljs-function"><span class=3D"hljs-title">if</span>(<spa=
n class=3D"hljs-keyword">tree</span>-&gt;</span>root =3D=3D NULL){
        <span class=3D"hljs-function"><span class=3D"hljs-title">tree</span=
>-&gt;</span>root =3D (BiTreeNode*)malloc(sizeof(BiTreeNode*));
        <span class=3D"hljs-function"><span class=3D"hljs-title">tree</span=
>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">root<=
/span>-&gt;</span><span class=3D"hljs-keyword">data</span> =3D (BiTreeData*=
)malloc(sizeof(BiTreeData*));
        <span class=3D"hljs-function"><span class=3D"hljs-title">tree</span=
>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">root<=
/span>-&gt;</span>right =3D NULL;
        <span class=3D"hljs-function"><span class=3D"hljs-title">tree</span=
>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">root<=
/span>-&gt;</span>left =3D NULL;
        <span class=3D"hljs-function"><span class=3D"hljs-title">tree</span=
>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">root<=
/span>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">=
data</span>-&gt;</span>str =3D str;
        <span class=3D"hljs-function"><span class=3D"hljs-title">tree</span=
>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">root<=
/span>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">=
data</span>-&gt;</span>hidden =3D <span class=3D"hljs-number">0</span>;
        <span class=3D"hljs-function"><span class=3D"hljs-title">tree</span=
>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">root<=
/span>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">=
data</span>-&gt;</span>start_count =3D <span class=3D"hljs-number">0</span>=
;
        <span class=3D"hljs-function"><span class=3D"hljs-title">tree</span=
>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">root<=
/span>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">=
data</span>-&gt;</span>end_count =3D <span class=3D"hljs-number">0</span>;
        <span class=3D"hljs-function"><span class=3D"hljs-title">tree</span=
>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">root<=
/span>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">=
data</span>-&gt;</span>diff =3D <span class=3D"hljs-number">0</span>;
        <span class=3D"hljs-function"><span class=3D"hljs-title">tree</span=
>-&gt;</span>size++;
        return <span class=3D"hljs-number">0</span>;
    }   =20
    <span class=3D"hljs-keyword">if</span>(node =3D=3D NULL){
        node =3D (BiTreeNode*)malloc(sizeof(BiTreeNode));
        <span class=3D"hljs-function"><span class=3D"hljs-title">node</span=
>-&gt;</span>right =3D (BiTreeNode*)malloc(sizeof(BiTreeNode*));
        <span class=3D"hljs-function"><span class=3D"hljs-title">node</span=
>-&gt;</span>right =3D NULL;
        <span class=3D"hljs-function"><span class=3D"hljs-title">node</span=
>-&gt;</span>left =3D (BiTreeNode*)malloc(sizeof(BiTreeNode*));
        <span class=3D"hljs-function"><span class=3D"hljs-title">node</span=
>-&gt;</span>left =3D NULL;
        <span class=3D"hljs-function"><span class=3D"hljs-title">node</span=
>-&gt;</span><span class=3D"hljs-keyword">data</span> =3D (BiTreeData*)mall=
oc(sizeof(BiTreeData*));
        <span class=3D"hljs-function"><span class=3D"hljs-title">node</span=
>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">data<=
/span>-&gt;</span>str =3D str;
        <span class=3D"hljs-function"><span class=3D"hljs-title">node</span=
>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">data<=
/span>-&gt;</span>hidden =3D <span class=3D"hljs-number">0</span>;
        <span class=3D"hljs-function"><span class=3D"hljs-title">node</span=
>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">data<=
/span>-&gt;</span>start_count =3D <span class=3D"hljs-number">0</span>;
        <span class=3D"hljs-function"><span class=3D"hljs-title">node</span=
>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">data<=
/span>-&gt;</span>end_count =3D <span class=3D"hljs-number">0</span>;
        <span class=3D"hljs-function"><span class=3D"hljs-title">node</span=
>-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-title">data<=
/span>-&gt;</span>diff =3D <span class=3D"hljs-number">0</span>;
        <span class=3D"hljs-function"><span class=3D"hljs-title">tree</span=
>-&gt;</span>size++;
        return <span class=3D"hljs-number">0</span>;
    }
    <span class=3D"hljs-function"><span class=3D"hljs-title">if</span>(strc=
mp(str, node-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-t=
itle">data</span>-&gt;</span>str)&lt;<span class=3D"hljs-number">0</span>){
        <span class=3D"hljs-function"><span class=3D"hljs-title">if</span>(=
node-&gt;</span>left =3D=3D NULL){

            return <span class=3D"hljs-number">0</span>;
        }
                <span class=3D"hljs-function"><span class=3D"hljs-title">bi=
tree_insert</span>(<span class=3D"hljs-keyword">tree</span>, node-&gt;</spa=
n>left, str);
    }
    <span class=3D"hljs-function"><span class=3D"hljs-title">if</span>(strc=
mp(str, node-&gt;</span><span class=3D"hljs-function"><span class=3D"hljs-t=
itle">data</span>-&gt;</span>str)&gt;<span class=3D"hljs-number">0</span>){
        <span class=3D"hljs-function"><span class=3D"hljs-title">if</span>(=
node-&gt;</span>right =3D=3D NULL){
            return <span class=3D"hljs-number">0</span>;
        }
        <span class=3D"hljs-function"><span class=3D"hljs-title">bitree_ins=
ert</span>(<span class=3D"hljs-keyword">tree</span>, node-&gt;</span>right,=
 str);
    }   =20
    return <span class=3D"hljs-number">0</span>;
}=20
</code></pre>
</p></div><div class=3D"bg-blue-200 rounded-xl px-4 py-2 flex flex-col spac=
e-y-1.5"><span class=3D"font-bold text-lg text-gray-500 ">Cause:</span><p c=
lass=3D"indent-8">The arguments you pass to the function <code>bitree_inser=
t</code> are passed by value and not by reference.</p></div><div class=3D"b=
g-green-200 rounded-xl px-4 py-2 flex flex-col space-y-1.5"><span class=3D"=
font-bold text-lg text-gray-500 ">Solution:</span><p class=3D"indent-8">It =
seems that what you wanted to do is to pass a reference to a node, i.e. <co=
de>BitTreeNode **</code>. That way, when you assign to <code>*node</code> t=
hat assignment is to the pointer passed from the caller rather than to the =
local variable.</p></div><div class=3D"bg-red-200 rounded-xl px-4 py-2 flex=
 flex-col space-y-1.5"><span class=3D"font-bold text-lg text-gray-500 ">Imp=
act:</span><p class=3D"indent-8">So, for example, <code>node</code> is a po=
inter to a <code>BitTreeNode</code> type variable. If you then assign to <c=
ode>node</code>, it sets the value of the local variable named node.</p></d=
iv><div class=3D"self-end"><div><a href=3D"https://stackoverflow.com/questi=
ons/13102343" class=3D"flex flex-row bg-orange-400 hover:bg-orange-500 tran=
sition-colors px-3 py-1.5 items-center space-x-2 inline rounded "><div clas=
s=3D"bg-white p-1.5 rounded-full"><svg class=3D"icon" viewBox=3D"0 0 1024 1=
024" version=3D"1.1" xmlns=3D"http://www.w3.org/2000/svg" width=3D"20" heig=
ht=3D"20"><path d=3D"M620.714667 895.829333L213.376 896 213.333333 808.832l=
407.338667-0.213333 0.042667 87.210666zM896 402.133333L826.325333 0l-85.76 =
14.933333 69.674667 402.090667 85.76-14.933333z m-265.472 294.698667l-405.6=
32-37.418667-7.978667 86.826667 405.632 37.376 7.978667-86.784z m26.752-113=
.749333l-393.386667-105.941334-22.613333 84.181334 393.429333 105.984 22.61=
3334-84.224z m51.370667-99.712L357.76 276.053333 313.6 351.146667l350.89066=
7 207.36 44.202666-75.093334z m86.016-61.013334l-229.504-337.237333-71.8933=
34 49.066667 229.546667 337.237333 71.850667-49.066667z" fill=3D"#FF810F"><=
/path><path d=3D"M697.770667 597.333333v357.973334h-541.866667V597.333333H8=
5.333333v426.666667h682.666667V597.333333z" fill=3D"#BEBCBC"></path></svg><=
/div><span class=3D"text-white font-bold text-sm">Go to Source</span></a></=
div></div></div><div class=3D"w-full bg-white rounded-xl px-6 py-4 flex fle=
x-col space-y-2"><h1 class=3D"justify-self-center text-base text-black text=
-ellipsis text-5xl ">Answer: 2</h1><div class=3D"bg-orange-200 rounded-xl p=
x-4 py-2 flex flex-col space-y-1.5"><span class=3D"font-bold text-lg text-g=
ray-500 ">Post Question:</span><p class=3D"text-base text-black  text-ellip=
sis text-lg "><p>For some inexplicable reason, this C++ program exits upon =
accepting a socket. The socket is accepted, that is reflected on the client=
 end, but the server then spontaneously explodes.</p>

<p>The full code follows:</p>

<pre><code class=3D"hljs language-cpp"><span class=3D"hljs-meta">#<span cla=
ss=3D"hljs-keyword">include</span> <span class=3D"hljs-string">&lt;sys/type=
s.h&gt;</span></span>
<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">include</span> <spa=
n class=3D"hljs-string">&lt;stdio.h&gt;</span></span>
<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">include</span> <spa=
n class=3D"hljs-string">&lt;arpa/inet.h&gt;</span></span>
<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">include</span> <spa=
n class=3D"hljs-string">&lt;stdlib.h&gt;</span></span>
<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">include</span> <spa=
n class=3D"hljs-string">&lt;unistd.h&gt;</span></span>
<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">include</span> <spa=
n class=3D"hljs-string">&lt;sys/socket.h&gt;</span></span>
<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">include</span> <spa=
n class=3D"hljs-string">&lt;string.h&gt;</span></span>
<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">include</span> <spa=
n class=3D"hljs-string">&lt;errno.h&gt;</span></span>

<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">define</span> BUF_S=
IZE 500</span>
<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">define</span> BACKL=
OG 50</span>

<span class=3D"hljs-function"><span class=3D"hljs-type">int</span> <span cl=
ass=3D"hljs-title">main</span><span class=3D"hljs-params">(<span class=3D"h=
ljs-type">int</span> argc, <span class=3D"hljs-type">char</span> *argv[])</=
span>
</span>{
    <span class=3D"hljs-keyword">if</span> (argc &lt; <span class=3D"hljs-n=
umber">2</span>)
    {
        <span class=3D"hljs-built_in">printf</span>(<span class=3D"hljs-str=
ing">"Usage %s port\n"</span>, argv[<span class=3D"hljs-number">0</span>]);
        <span class=3D"hljs-built_in">exit</span>(EXIT_FAILURE);
    }

    <span class=3D"hljs-keyword">struct</span> <span class=3D"hljs-title cl=
ass_">sockaddr_in</span> addr;
    <span class=3D"hljs-keyword">struct</span> <span class=3D"hljs-title cl=
ass_">sockaddr_storage</span> theiraddr;
    <span class=3D"hljs-type">socklen_t</span> addrlen;
    <span class=3D"hljs-type">char</span> buf[BUF_SIZE];

    addr.sin_family =3D AF_INET;
    addr.sin_port =3D <span class=3D"hljs-built_in">htons</span>(<span clas=
s=3D"hljs-built_in">atoi</span>(argv[<span class=3D"hljs-number">1</span>])=
);
    addr.sin_addr.s_addr =3D INADDR_ANY;

    theiraddr.ss_family =3D AF_INET;

    <span class=3D"hljs-type">int</span> sockfd =3D <span class=3D"hljs-bui=
lt_in">socket</span>(AF_INET, SOCK_STREAM|SOCK_NONBLOCK, <span class=3D"hlj=
s-number">0</span>);

    <span class=3D"hljs-keyword">if</span> (sockfd =3D=3D <span class=3D"hl=
js-number">-1</span>)
    {
        <span class=3D"hljs-built_in">printf</span>(<span class=3D"hljs-str=
ing">"Sock Error!\n"</span>);
        <span class=3D"hljs-built_in">exit</span>(EXIT_FAILURE);
    }

    <span class=3D"hljs-keyword">if</span> (<span class=3D"hljs-built_in">b=
ind</span>(sockfd, (<span class=3D"hljs-keyword">struct</span> sockaddr*)&a=
mp;addr, <span class=3D"hljs-built_in">sizeof</span>(addr)) =3D=3D <span cl=
ass=3D"hljs-number">-1</span>)
    {
        <span class=3D"hljs-built_in">printf</span>(<span class=3D"hljs-str=
ing">"Bind Error!\n"</span>);
        <span class=3D"hljs-built_in">exit</span>(EXIT_FAILURE);
    }

    <span class=3D"hljs-keyword">if</span> (<span class=3D"hljs-built_in">l=
isten</span>(sockfd, BACKLOG) =3D=3D <span class=3D"hljs-number">-1</span>)
    {
        <span class=3D"hljs-built_in">printf</span>(<span class=3D"hljs-str=
ing">"Listen Error!\n"</span>);
        <span class=3D"hljs-built_in">exit</span>(EXIT_FAILURE);
    }

    addrlen =3D <span class=3D"hljs-built_in">sizeof</span>(theiraddr);
    <span class=3D"hljs-type">int</span> accepted;

    <span class=3D"hljs-keyword">for</span> ( <span class=3D"hljs-type">int=
</span> i =3D <span class=3D"hljs-number">0</span>; ; i++ )
    {
        <span class=3D"hljs-built_in">usleep</span>(<span class=3D"hljs-num=
ber">100000</span>);

        errno =3D <span class=3D"hljs-number">0</span>;
        <span class=3D"hljs-built_in">printf</span>(<span class=3D"hljs-str=
ing">"pre-accept\n"</span>);
        accepted =3D <span class=3D"hljs-built_in">accept</span>(sockfd, (<=
span class=3D"hljs-keyword">struct</span> sockaddr *)&amp;theiraddr, &amp;a=
ddrlen);
        <span class=3D"hljs-built_in">printf</span>(<span class=3D"hljs-str=
ing">"%i"</span>, accepted =3D=3D <span class=3D"hljs-number">-1</span>); <=
span class=3D"hljs-comment">//this line does not get executed</span>

        <span class=3D"hljs-keyword">if</span>(errno =3D=3D EWOULDBLOCK)
        {
            <span class=3D"hljs-built_in">printf</span>(<span class=3D"hljs=
-string">"WOULDBLOCK %i\n"</span>, i);
            <span class=3D"hljs-keyword">continue</span>;
        }
        <span class=3D"hljs-keyword">else</span> <span class=3D"hljs-keywor=
d">if</span>(accepted =3D=3D <span class=3D"hljs-number">-1</span>)
        {
            <span class=3D"hljs-built_in">printf</span>(<span class=3D"hljs=
-string">"TERRIBLE TRAGEDY\n"</span>);
        }

        <span class=3D"hljs-built_in">printf</span>(<span class=3D"hljs-str=
ing">"Accepted.\n"</span>);

        <span class=3D"hljs-type">char</span> msg[] =3D <span class=3D"hljs=
-string">"You have connected."</span>;

        <span class=3D"hljs-built_in">send</span>(sockfd, msg, <span class=
=3D"hljs-built_in">sizeof</span>(msg), <span class=3D"hljs-number">0</span>=
);

        <span class=3D"hljs-built_in">close</span>(accepted);

    }
    <span class=3D"hljs-built_in">close</span>(sockfd);
}
</code></pre>
</p></div><div class=3D"bg-blue-200 rounded-xl px-4 py-2 flex flex-col spac=
e-y-1.5"><span class=3D"font-bold text-lg text-gray-500 ">Cause:</span><p c=
lass=3D"indent-8">Your real error seems to be this one
<pre><code class=3D"hljs language-lisp">send(<span class=3D"hljs-name">sock=
fd</span>, msg, sizeof(<span class=3D"hljs-name">msg</span>), <span class=
=3D"hljs-number">0</span>)<span class=3D"hljs-comment">;</span>
</code></pre></p></div><div class=3D"bg-green-200 rounded-xl px-4 py-2 flex=
 flex-col space-y-1.5"><span class=3D"font-bold text-lg text-gray-500 ">Sol=
ution:</span><p class=3D"indent-8">I guess you meant to send on <code>accep=
ted</code>, the file descriptor that <code>accept</code> provided to you fo=
r doing the communication.</p></div><div class=3D"bg-red-200 rounded-xl px-=
4 py-2 flex flex-col space-y-1.5"><span class=3D"font-bold text-lg text-gra=
y-500 ">Impact:</span><p class=3D"indent-8"></p></div><div class=3D"self-en=
d"><div><a href=3D"https://stackoverflow.com/questions/14007215" class=3D"f=
lex flex-row bg-orange-400 hover:bg-orange-500 transition-colors px-3 py-1.=
5 items-center space-x-2 inline rounded "><div class=3D"bg-white p-1.5 roun=
ded-full"><svg class=3D"icon" viewBox=3D"0 0 1024 1024" version=3D"1.1" xml=
ns=3D"http://www.w3.org/2000/svg" width=3D"20" height=3D"20"><path d=3D"M62=
0.714667 895.829333L213.376 896 213.333333 808.832l407.338667-0.213333 0.04=
2667 87.210666zM896 402.133333L826.325333 0l-85.76 14.933333 69.674667 402.=
090667 85.76-14.933333z m-265.472 294.698667l-405.632-37.418667-7.978667 86=
.826667 405.632 37.376 7.978667-86.784z m26.752-113.749333l-393.386667-105.=
941334-22.613333 84.181334 393.429333 105.984 22.613334-84.224z m51.370667-=
99.712L357.76 276.053333 313.6 351.146667l350.890667 207.36 44.202666-75.09=
3334z m86.016-61.013334l-229.504-337.237333-71.893334 49.066667 229.546667 =
337.237333 71.850667-49.066667z" fill=3D"#FF810F"></path><path d=3D"M697.77=
0667 597.333333v357.973334h-541.866667V597.333333H85.333333v426.666667h682.=
666667V597.333333z" fill=3D"#BEBCBC"></path></svg></div><span class=3D"text=
-white font-bold text-sm">Go to Source</span></a></div></div></div><div cla=
ss=3D"w-full bg-white rounded-xl px-6 py-4 flex flex-col space-y-2"><h1 cla=
ss=3D"justify-self-center text-base text-black text-ellipsis text-5xl ">Ans=
wer: 3</h1><div class=3D"bg-orange-200 rounded-xl px-4 py-2 flex flex-col s=
pace-y-1.5"><span class=3D"font-bold text-lg text-gray-500 ">Post Question:=
</span><p class=3D"text-base text-black  text-ellipsis text-lg "><p>Please,=
 see the c-code and help me. Why i have "free(): invalid next size (fast)" =
? I try valgrind, but don't understand, there are too much "invalid write/r=
ead ....", but if I comment free_array(all) a have right answers. It's just=
 a part of all code.</p>

<pre><code class=3D"hljs language-arduino"><span class=3D"hljs-meta">#<span=
 class=3D"hljs-keyword">include</span> <span class=3D"hljs-string">&lt;stdi=
o.h&gt;</span></span>
<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">include</span> <spa=
n class=3D"hljs-string">&lt;stdint.h&gt;</span></span>
<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">include</span> <spa=
n class=3D"hljs-string">&lt;inttypes.h&gt;</span></span>
<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">include</span> <spa=
n class=3D"hljs-string">&lt;stdlib.h&gt;</span></span>

<span class=3D"hljs-keyword">struct</span> <span class=3D"hljs-title class_=
">pair</span> {
    <span class=3D"hljs-type">uint32_t</span> num;
    <span class=3D"hljs-type">uint32_t</span> effect;
};

<span class=3D"hljs-keyword">struct</span> <span class=3D"hljs-title class_=
">array</span> {
    <span class=3D"hljs-type">size_t</span> size;
    <span class=3D"hljs-keyword">struct</span> <span class=3D"hljs-title cl=
ass_">pair</span> data[];
};

<span class=3D"hljs-function"><span class=3D"hljs-type">size_t</span> <span=
 class=3D"hljs-title">sizeof_array</span><span class=3D"hljs-params">(<span=
 class=3D"hljs-type">size_t</span> size)</span>
</span>{
    <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-built_in=
">sizeof</span>(<span class=3D"hljs-keyword">struct</span> array) + (size *=
 <span class=3D"hljs-built_in">sizeof</span>(<span class=3D"hljs-type">uint=
32_t</span>));
}

<span class=3D"hljs-keyword">struct</span> <span class=3D"hljs-title class_=
">pair</span> *<span class=3D"hljs-built_in">create_pair</span>(<span class=
=3D"hljs-type">uint32_t</span> i, <span class=3D"hljs-type">uint32_t</span>=
 eff)
{
    <span class=3D"hljs-keyword">struct</span> <span class=3D"hljs-title cl=
ass_">pair</span> *ret =3D <span class=3D"hljs-built_in">calloc</span>(<spa=
n class=3D"hljs-number">2</span>, <span class=3D"hljs-built_in">sizeof</spa=
n>(<span class=3D"hljs-type">uint32_t</span>));
    <span class=3D"hljs-keyword">if</span> (! ret)
        <span class=3D"hljs-built_in">abort</span>();
    ret-&gt;num =3D i;
    ret-&gt;effect =3D eff;
    <span class=3D"hljs-keyword">return</span> ret;
}

<span class=3D"hljs-keyword">struct</span> <span class=3D"hljs-title class_=
">array</span> *<span class=3D"hljs-built_in">create_array</span>(<span cla=
ss=3D"hljs-type">size_t</span> size)
{
    <span class=3D"hljs-keyword">struct</span> <span class=3D"hljs-title cl=
ass_">array</span> *ret =3D <span class=3D"hljs-built_in">calloc</span>(<sp=
an class=3D"hljs-number">1</span>, <span class=3D"hljs-built_in">sizeof_arr=
ay</span>(size));
    <span class=3D"hljs-keyword">if</span> (! ret)=20
        <span class=3D"hljs-built_in">abort</span>();
    ret-&gt;size =3D size;
    <span class=3D"hljs-keyword">return</span> ret;
}

<span class=3D"hljs-function"><span class=3D"hljs-type">void</span> <span c=
lass=3D"hljs-title">free_array</span><span class=3D"hljs-params">(<span cla=
ss=3D"hljs-keyword">struct</span> array *array)</span>
</span>{
<span class=3D"hljs-comment">//    size_t i;</span>
<span class=3D"hljs-comment">//    for (i =3D 0; i &lt; array-&gt;size; ++i=
) {</span>
<span class=3D"hljs-comment">//        free(&amp;array-&gt;data[i]);</span>
<span class=3D"hljs-comment">//    }</span>
    <span class=3D"hljs-built_in">free</span>(array);
}

<span class=3D"hljs-function"><span class=3D"hljs-type">int</span> <span cl=
ass=3D"hljs-title">main</span><span class=3D"hljs-params">()</span>
    </span>{
    <span class=3D"hljs-type">int</span> eff;
    <span class=3D"hljs-type">size_t</span> n;
    <span class=3D"hljs-built_in">scanf</span>(<span class=3D"hljs-string">=
"%zu"</span>, &amp;n);
    <span class=3D"hljs-keyword">struct</span> <span class=3D"hljs-title cl=
ass_">array</span> *all =3D <span class=3D"hljs-built_in">create_array</spa=
n>(n);
    <span class=3D"hljs-type">size_t</span> i;
    <span class=3D"hljs-keyword">for</span>(i =3D <span class=3D"hljs-numbe=
r">0</span>; i &lt; n; ++i) {
        <span class=3D"hljs-built_in">scanf</span>(<span class=3D"hljs-stri=
ng">"%d"</span>, &amp;eff);
        all-&gt;data[i] =3D *<span class=3D"hljs-built_in">create_pair</spa=
n>(i, eff);
    }

    <span class=3D"hljs-built_in">free_array</span>(all);
    <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-number">=
0</span>;
}
</code></pre>
</p></div><div class=3D"bg-blue-200 rounded-xl px-4 py-2 flex flex-col spac=
e-y-1.5"><span class=3D"font-bold text-lg text-gray-500 ">Cause:</span><p c=
lass=3D"indent-8">Because <code>sizeof_array</code> returns a too small siz=
e, you allocate too little memory and write beyonds the bound of your alloc=
ated memory, and then end up with <em>undefined behavior</em>.
<hr>
You also have memory leaks, as you allocate memory for each <code>struct pa=
ir</code> in the array. When you allocate the <code>array</code> structure =
you already allocate memory for each <code>pair</code>, there's no need to =
allocate each one by one, especially since you just discard the pointer and=
 therefore have a memory leak.</p></div><div class=3D"bg-green-200 rounded-=
xl px-4 py-2 flex flex-col space-y-1.5"><span class=3D"font-bold text-lg te=
xt-gray-500 ">Solution:</span><p class=3D"indent-8">don't use the size of e=
ach member of a structure as base when allocating memory, use the actual st=
ructure. This is the cause of your problem as your function <code>sizeof_ar=
ray</code> returns a size approximately half the size you need.
Instead it should look something like
<pre><code class=3D"hljs language-arduino"><span class=3D"hljs-function"><s=
pan class=3D"hljs-type">size_t</span> <span class=3D"hljs-title">sizeof_arr=
ay</span><span class=3D"hljs-params">(<span class=3D"hljs-type">size_t</spa=
n> size)</span>
</span>{
    <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-built_in=
">sizeof</span>(<span class=3D"hljs-keyword">struct</span> array) + (size *=
 <span class=3D"hljs-built_in">sizeof</span>(<span class=3D"hljs-keyword">s=
truct</span> pair));
    <span class=3D"hljs-comment">/* Notice the use of the structure instead=
   ^^^^^^^^^^^ */</span>
}
</code></pre></p></div><div class=3D"bg-red-200 rounded-xl px-4 py-2 flex f=
lex-col space-y-1.5"><span class=3D"font-bold text-lg text-gray-500 ">Impac=
t:</span><p class=3D"indent-8"></p></div><div class=3D"self-end"><div><a hr=
ef=3D"https://stackoverflow.com/questions/19470315" class=3D"flex flex-row =
bg-orange-400 hover:bg-orange-500 transition-colors px-3 py-1.5 items-cente=
r space-x-2 inline rounded "><div class=3D"bg-white p-1.5 rounded-full"><sv=
g class=3D"icon" viewBox=3D"0 0 1024 1024" version=3D"1.1" xmlns=3D"http://=
www.w3.org/2000/svg" width=3D"20" height=3D"20"><path d=3D"M620.714667 895.=
829333L213.376 896 213.333333 808.832l407.338667-0.213333 0.042667 87.21066=
6zM896 402.133333L826.325333 0l-85.76 14.933333 69.674667 402.090667 85.76-=
14.933333z m-265.472 294.698667l-405.632-37.418667-7.978667 86.826667 405.6=
32 37.376 7.978667-86.784z m26.752-113.749333l-393.386667-105.941334-22.613=
333 84.181334 393.429333 105.984 22.613334-84.224z m51.370667-99.712L357.76=
 276.053333 313.6 351.146667l350.890667 207.36 44.202666-75.093334z m86.016=
-61.013334l-229.504-337.237333-71.893334 49.066667 229.546667 337.237333 71=
.850667-49.066667z" fill=3D"#FF810F"></path><path d=3D"M697.770667 597.3333=
33v357.973334h-541.866667V597.333333H85.333333v426.666667h682.666667V597.33=
3333z" fill=3D"#BEBCBC"></path></svg></div><span class=3D"text-white font-b=
old text-sm">Go to Source</span></a></div></div></div><div class=3D"w-full =
bg-white rounded-xl px-6 py-4 flex flex-col space-y-2"><h1 class=3D"justify=
-self-center text-base text-black text-ellipsis text-5xl ">Answer: 4</h1><d=
iv class=3D"bg-orange-200 rounded-xl px-4 py-2 flex flex-col space-y-1.5"><=
span class=3D"font-bold text-lg text-gray-500 ">Post Question:</span><p cla=
ss=3D"text-base text-black  text-ellipsis text-lg "><p>if is it possible ru=
n-time bad pointer exception in C language?.</p>

<p>I am using below compiler.</p>

<p><strong>Note</strong> <strong>:</strong> <strong>Microsoft Visual C++ Co=
mpiler</strong> </p>

<p>Sample Programs Below.</p>

<pre><code class=3D"hljs language-cpp"><span class=3D"hljs-meta">#<span cla=
ss=3D"hljs-keyword">include</span> <span class=3D"hljs-string">&lt;stdio.h&=
gt;</span></span>
<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">include</span> <spa=
n class=3D"hljs-string">&lt;stdlib.h&gt;</span></span>
<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">include</span> <spa=
n class=3D"hljs-string">&lt;Windows.h&gt;</span></span>
<span class=3D"hljs-meta">#<span class=3D"hljs-keyword">include</span> <spa=
n class=3D"hljs-string">&lt;Windef.h&gt;</span></span>

<span class=3D"hljs-keyword">typedef</span> <span class=3D"hljs-keyword">st=
ruct</span> <span class=3D"hljs-title class_">tagTest</span>{
<span class=3D"hljs-type">int</span> i;
<span class=3D"hljs-type">char</span> *str;
}   Test,=20
    FAR *LPTest,=20
    FAR **LLPTEST;

 <span class=3D"hljs-keyword">extern</span> LLPTEST m;

 <span class=3D"hljs-function"><span class=3D"hljs-type">int</span> <span c=
lass=3D"hljs-title">main</span><span class=3D"hljs-params">()</span>
 </span>{

  <span class=3D"hljs-type">int</span> i;

  LLPTEST m =3D <span class=3D"hljs-literal">NULL</span>;

  m =3D (LLPTEST)<span class=3D"hljs-built_in">malloc</span>(<span class=3D=
"hljs-built_in">sizeof</span>(LLPTEST));

  <span class=3D"hljs-comment">// Here We Check m[0] memory allocated or no=
t ?</span>
  <span class=3D"hljs-comment">// example: if(m[0]), or if(m[0]-&gt;i) any =
other idea. here m[0] is CXX0030 error expression cannot be evaluated.</spa=
n>

  <span class=3D"hljs-comment">/* allocate memory */</span>
  <span class=3D"hljs-keyword">for</span>(i=3D<span class=3D"hljs-number">0=
</span>; i&lt;<span class=3D"hljs-number">10</span>; i++)
  {
     m[i] =3D (LPTest) <span class=3D"hljs-built_in">malloc</span>(<span cl=
ass=3D"hljs-built_in">sizeof</span>(Test));
     m[i]-&gt;i =3D i;
     m[i]-&gt;str =3D (<span class=3D"hljs-type">char</span>*) <span class=
=3D"hljs-built_in">malloc</span>(<span class=3D"hljs-number">10</span>*<spa=
n class=3D"hljs-built_in">sizeof</span>(<span class=3D"hljs-type">char</spa=
n>));
     m[i]-&gt;str =3D <span class=3D"hljs-string">"Test"</span>;
 }

 <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-number">0</=
span>;
}
</code></pre>
</p></div><div class=3D"bg-blue-200 rounded-xl px-4 py-2 flex flex-col spac=
e-y-1.5"><span class=3D"font-bold text-lg text-gray-500 ">Cause:</span><p c=
lass=3D"indent-8">No. C doesn't support exceptions, so there's nothing to c=
atch.</p></div><div class=3D"bg-green-200 rounded-xl px-4 py-2 flex flex-co=
l space-y-1.5"><span class=3D"font-bold text-lg text-gray-500 ">Solution:</=
span><p class=3D"indent-8"></p></div><div class=3D"bg-red-200 rounded-xl px=
-4 py-2 flex flex-col space-y-1.5"><span class=3D"font-bold text-lg text-gr=
ay-500 ">Impact:</span><p class=3D"indent-8">What you're seeing isn't a "ba=
d pointer exception," it's a memory access error -- there is no way to reco=
ver from it.</p></div><div class=3D"self-end"><div><a href=3D"https://stack=
overflow.com/questions/25258140" class=3D"flex flex-row bg-orange-400 hover=
:bg-orange-500 transition-colors px-3 py-1.5 items-center space-x-2 inline =
rounded "><div class=3D"bg-white p-1.5 rounded-full"><svg class=3D"icon" vi=
ewBox=3D"0 0 1024 1024" version=3D"1.1" xmlns=3D"http://www.w3.org/2000/svg=
" width=3D"20" height=3D"20"><path d=3D"M620.714667 895.829333L213.376 896 =
213.333333 808.832l407.338667-0.213333 0.042667 87.210666zM896 402.133333L8=
26.325333 0l-85.76 14.933333 69.674667 402.090667 85.76-14.933333z m-265.47=
2 294.698667l-405.632-37.418667-7.978667 86.826667 405.632 37.376 7.978667-=
86.784z m26.752-113.749333l-393.386667-105.941334-22.613333 84.181334 393.4=
29333 105.984 22.613334-84.224z m51.370667-99.712L357.76 276.053333 313.6 3=
51.146667l350.890667 207.36 44.202666-75.093334z m86.016-61.013334l-229.504=
-337.237333-71.893334 49.066667 229.546667 337.237333 71.850667-49.066667z"=
 fill=3D"#FF810F"></path><path d=3D"M697.770667 597.333333v357.973334h-541.=
866667V597.333333H85.333333v426.666667h682.666667V597.333333z" fill=3D"#BEB=
CBC"></path></svg></div><span class=3D"text-white font-bold text-sm">Go to =
Source</span></a></div></div></div><div class=3D"w-full bg-white rounded-xl=
 px-6 py-4 flex flex-col space-y-2"><h1 class=3D"justify-self-center text-b=
ase text-black text-ellipsis text-5xl ">Answer: 5</h1><div class=3D"bg-oran=
ge-200 rounded-xl px-4 py-2 flex flex-col space-y-1.5"><span class=3D"font-=
bold text-lg text-gray-500 ">Post Question:</span><p class=3D"text-base tex=
t-black  text-ellipsis text-lg "><p>I'm getting this error <strong>tema4.y:=
13.19-26: syntax error, unexpected typetype</strong> on the following code,=
 please help me!</p>

<pre><code class=3D"hljs language-pgsql">%{
<span class=3D"hljs-meta">#include &lt;stdio.h&gt;</span>
<span class=3D"hljs-meta">#include &lt;string.h&gt;</span>
<span class=3D"hljs-meta">#include &lt;stdlib.h&gt;</span>
%}
%<span class=3D"hljs-keyword">union</span> {
<span class=3D"hljs-type">int</span> intval;
<span class=3D"hljs-type">char</span>* strval;
<span class=3D"hljs-type">char</span>* charval;
}
%token &lt;charval&gt;SHR &lt;intval&gt;NR
%token CMP
<span class=3D"hljs-meta">%type</span> &lt;strval&gt;str &lt;intval&gt;expr
%nonassoc CMP <span class=3D"hljs-string">'|'</span>  =20
%left <span class=3D"hljs-string">'+'</span> <span class=3D"hljs-string">'-=
'</span>
%left <span class=3D"hljs-string">'*'</span> <span class=3D"hljs-string">'`=
'</span> <span class=3D"hljs-string">'#'</span>

%<span class=3D"hljs-keyword">start</span> s
%%
s:str {printf("%s \n",$&lt;strval&gt;$);}
 | expr {printf("%s \n",$&lt;intval&gt;$)}
 ;
str : str <span class=3D"hljs-string">'+'</span> str {
                   <span class=3D"hljs-type">char</span>* s=3Dmalloc(strlen=
(<span class=3D"hljs-meta">$1</span>)+strlen(<span class=3D"hljs-meta">$3</=
span>)+<span class=3D"hljs-number">1</span>);
                   strcpy(s,<span class=3D"hljs-meta">$1</span>);
                   strcat(s,<span class=3D"hljs-meta">$3</span>);
                   $$<span class=3D"language-pgsql">=3Ds;
                   }
    | str <span class=3D"hljs-string">'-'</span> str {
                   <span class=3D"hljs-type">char</span> *s=3Dmalloc(strlen=
(<span class=3D"hljs-meta">$1</span>));
                   <span class=3D"hljs-type">char</span> *sir=3Dmalloc(strl=
en(<span class=3D"hljs-meta">$1</span>)-strlen(<span class=3D"hljs-meta">$3=
</span>));
                   <span class=3D"hljs-type">char</span> *pt,*ps;
                   <span class=3D"hljs-type">int</span> i;
                   strcpy(s,<span class=3D"hljs-meta">$1</span>);
                   pt=3Dstrstr(s,<span class=3D"hljs-meta">$3</span>);  =20
                   <span class=3D"hljs-keyword">if</span>(pt) {
                           ps=3Dpt+strlen(<span class=3D"hljs-meta">$3</spa=
n>);
                           strncpy(pt,ps,strlen(ps));=20
                           ps+=3Dstrlen(ps);
                           strncpy(sir,s,strlen(<span class=3D"hljs-meta">$=
1</span>)-strlen(<span class=3D"hljs-meta">$3</span>));
                          }
                  $$</span>=3Dsir;
                  }
    | str <span class=3D"hljs-string">'*'</span> NR {
                   <span class=3D"hljs-type">int</span> i;
                   <span class=3D"hljs-type">char</span>* s=3Dmalloc(strlen=
(<span class=3D"hljs-meta">$1</span>)*NR+<span class=3D"hljs-number">1</spa=
n>);
                   <span class=3D"hljs-keyword">for</span>(i=3D<span class=
=3D"hljs-number">0</span>;i&lt;<span class=3D"hljs-meta">$3</span>;i++)
                   {
                      strcat(s,<span class=3D"hljs-meta">$1</span>);
                   }
                   $$<span class=3D"language-pgsql">=3Ds;
                 }
    | str <span class=3D"hljs-string">'#'</span> NR {
                   <span class=3D"hljs-type">char</span> *s=3Dmalloc(<span =
class=3D"hljs-meta">$3</span>+<span class=3D"hljs-number">1</span>);
                   strcpy(s,<span class=3D"hljs-meta">$1</span>);
                   <span class=3D"hljs-keyword">if</span>(<span class=3D"hl=
js-meta">$3</span>&gt;strlen(<span class=3D"hljs-meta">$1</span>)) {printf(=
"Nr prea mare\n");<span class=3D"hljs-keyword">exit</span>(<span class=3D"h=
ljs-number">1</span>);}
                   <span class=3D"hljs-keyword">else</span> {s=3Ds+strlen(s=
)-<span class=3D"hljs-meta">$3</span>;
                        $$</span>=3Ds;}
                 }
    | NR <span class=3D"hljs-string">'`'</span> str {
                  <span class=3D"hljs-type">char</span> *s=3Dmalloc(<span c=
lass=3D"hljs-meta">$1</span>+<span class=3D"hljs-number">1</span>);=20
                  strncpy(s,<span class=3D"hljs-meta">$3</span>,<span class=
=3D"hljs-meta">$1</span>);
                  $$<span class=3D"language-python">=3Ds;
                 }

    | <span class=3D"hljs-string">'('</span> <span class=3D"hljs-built_in">=
str</span> <span class=3D"hljs-string">')'</span> {
                  $$</span>=3D<span class=3D"hljs-meta">$2</span>;
                  }
    | SHR {
         <span class=3D"hljs-type">char</span>* s=3Dmalloc(strlen(<span cla=
ss=3D"hljs-meta">$1</span>));
         strcpy(s,<span class=3D"hljs-meta">$1</span>);
         $$<span class=3D"language-bash">=3Ds;
         }
    | <span class=3D"hljs-built_in">expr</span>
    ;
<span class=3D"hljs-built_in">expr</span> : str CMP str {
                  <span class=3D"hljs-keyword">if</span>(strcmp(<span class=
=3D"hljs-variable">$1</span>,<span class=3D"hljs-variable">$3</span>)) $$</=
span>=3D<span class=3D"hljs-number">0</span>;
                  <span class=3D"hljs-keyword">else</span> $$<span class=3D=
"language-python">=3D<span class=3D"hljs-number">1</span>;
                  }
    | <span class=3D"hljs-string">'|'</span> <span class=3D"hljs-built_in">=
str</span> <span class=3D"hljs-string">'|'</span> {
                  $$</span>=3Dstrlen(<span class=3D"hljs-meta">$2</span>);
                  }
 ;
%%
<span class=3D"hljs-type">int</span> main(){
   yyparse();
}
</code></pre>
</p></div><div class=3D"bg-blue-200 rounded-xl px-4 py-2 flex flex-col spac=
e-y-1.5"><span class=3D"font-bold text-lg text-gray-500 ">Cause:</span><p c=
lass=3D"indent-8">As best I can tell you can only have one <code><type></ty=
pe></code> in a <code>%token</code> or <code>%type</code> declaration. You =
can have multiple tokens or non-terminals but only one type name.</p></div>=
<div class=3D"bg-green-200 rounded-xl px-4 py-2 flex flex-col space-y-1.5">=
<span class=3D"font-bold text-lg text-gray-500 ">Solution:</span><p class=
=3D"indent-8">Try splitting those lines:
<pre><code class=3D"hljs language-pgsql">%token  SHR
%token  NR
%token CMP
<span class=3D"hljs-meta">%type</span>  str
<span class=3D"hljs-meta">%type</span>  expr
</code></pre></p></div><div class=3D"bg-red-200 rounded-xl px-4 py-2 flex f=
lex-col space-y-1.5"><span class=3D"font-bold text-lg text-gray-500 ">Impac=
t:</span><p class=3D"indent-8"></p></div><div class=3D"self-end"><div><a hr=
ef=3D"https://stackoverflow.com/questions/4605990" class=3D"flex flex-row b=
g-orange-400 hover:bg-orange-500 transition-colors px-3 py-1.5 items-center=
 space-x-2 inline rounded "><div class=3D"bg-white p-1.5 rounded-full"><svg=
 class=3D"icon" viewBox=3D"0 0 1024 1024" version=3D"1.1" xmlns=3D"http://w=
ww.w3.org/2000/svg" width=3D"20" height=3D"20"><path d=3D"M620.714667 895.8=
29333L213.376 896 213.333333 808.832l407.338667-0.213333 0.042667 87.210666=
zM896 402.133333L826.325333 0l-85.76 14.933333 69.674667 402.090667 85.76-1=
4.933333z m-265.472 294.698667l-405.632-37.418667-7.978667 86.826667 405.63=
2 37.376 7.978667-86.784z m26.752-113.749333l-393.386667-105.941334-22.6133=
33 84.181334 393.429333 105.984 22.613334-84.224z m51.370667-99.712L357.76 =
276.053333 313.6 351.146667l350.890667 207.36 44.202666-75.093334z m86.016-=
61.013334l-229.504-337.237333-71.893334 49.066667 229.546667 337.237333 71.=
850667-49.066667z" fill=3D"#FF810F"></path><path d=3D"M697.770667 597.33333=
3v357.973334h-541.866667V597.333333H85.333333v426.666667h682.666667V597.333=
333z" fill=3D"#BEBCBC"></path></svg></div><span class=3D"text-white font-bo=
ld text-sm">Go to Source</span></a></div></div></div></div></div><div class=
=3D"w-full fixed h-8 bottom-0 px-2 py-1 flex items-center justify-center te=
xt-gray-500 "><img src=3D"http://101.43.165.133:5173/src/assets/huggingface=
.png" class=3D"w-4 h-4"><span class=3D"text-base">UniXcoder</span></div></d=
iv>
   =20
 =20

</body><div style=3D"all: initial;"><div id=3D"__hcfy__" style=3D"all: init=
ial;"><template shadowmode=3D"open"><link rel=3D"stylesheet" href=3D"chrome=
-extension://oikmahiipjniocckomdccmplodldodja/normalize.css"><link rel=3D"s=
tylesheet" href=3D"chrome-extension://oikmahiipjniocckomdccmplodldodja/blue=
print.css"><link rel=3D"stylesheet" href=3D"chrome-extension://oikmahiipjni=
occkomdccmplodldodja/blueprint-select.css"><link rel=3D"stylesheet" href=3D=
"chrome-extension://oikmahiipjniocckomdccmplodldodja/cropper.css"><div id=
=3D"root" dir=3D"ltr" class=3D"bp4-dark"><div id=3D"app" class=3D"bp4-dark"=
><div id=3D"translate-btn"><button type=3D"button" class=3D"bp4-button"><sp=
an class=3D"btn-icon"></span></button></div><div id=3D"popper-container" cl=
ass=3D"pin bp4-elevation-4" style=3D"width: 250px; transform: translate(0px=
, 0px);"><div id=3D"translate-panel" class=3D"size-small" style=3D"max-heig=
ht: 1042px;"><div class=3D"fixed"><div class=3D"header"><div class=3D"left"=
><div class=3D"switch-pin"><button type=3D"button" class=3D"bp4-button bp4-=
active bp4-minimal bp4-small"><span icon=3D"pin" aria-hidden=3D"true" class=
=3D"bp4-icon bp4-icon-pin"><svg data-icon=3D"pin" width=3D"14" height=3D"14=
" viewBox=3D"0 0 16 16" role=3D"img"><path d=3D"M9.41.92c-.51.51-.41 1.5.15=
 2.56L4.34 7.54C2.8 6.48 1.45 6.05.92 6.58l3.54 3.54-3.54 4.95 4.95-3.54 3.=
54 3.54c.53-.53.1-1.88-.96-3.42l4.06-5.22c1.06.56 2.04.66 2.55.15L9.41.92z"=
 fill-rule=3D"evenodd"></path></svg></span></button></div><button type=3D"b=
utton" title=3D"=E5=9B=BE=E7=89=87=E7=BF=BB=E8=AF=91" class=3D"bp4-button b=
p4-minimal bp4-small"><span icon=3D"media" aria-hidden=3D"true" class=3D"bp=
4-icon bp4-icon-media"><svg data-icon=3D"media" width=3D"14" height=3D"14" =
viewBox=3D"0 0 16 16" role=3D"img"><path d=3D"M11.99 6.99c.55 0 1-.45 1-1s-=
.45-1-1-1-1 .45-1 1 .45 1 1 1zm3-5h-14c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h1=
4c.55 0 1-.45 1-1v-10c0-.55-.45-1-1-1zm-1 9l-5-3-1 2-3-4-3 5v-7h12v7z" fill=
-rule=3D"evenodd"></path></svg></span></button><button type=3D"button" titl=
e=3D"=E8=AF=AD=E9=9F=B3=E7=BF=BB=E8=AF=91" class=3D"bp4-button bp4-minimal =
bp4-small"><span class=3D"bp4-icon"><svg version=3D"1.1" id=3D"Capa_1" widt=
h=3D"14" height=3D"14" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"=
http://www.w3.org/1999/xlink" x=3D"0px" y=3D"0px" viewBox=3D"0 0 490.9 490.=
9" xml:space=3D"preserve"><g><g><path d=3D"M245.5,322.9c53,0,96.2-43.2,96.2=
-96.2V96.2c0-53-43.2-96.2-96.2-96.2s-96.2,43.2-96.2,96.2v130.5 C149.3,279.8=
,192.5,322.9,245.5,322.9z M173.8,96.2c0-39.5,32.2-71.7,71.7-71.7s71.7,32.2,=
71.7,71.7v130.5 c0,39.5-32.2,71.7-71.7,71.7s-71.7-32.2-71.7-71.7V96.2z"></p=
ath><path d=3D"M94.4,214.5c-6.8,0-12.3,5.5-12.3,12.3c0,85.9,66.7,156.6,151.=
1,162.8v76.7h-63.9c-6.8,0-12.3,5.5-12.3,12.3 s5.5,12.3,12.3,12.3h152.3c6.8,=
0,12.3-5.5,12.3-12.3s-5.5-12.3-12.3-12.3h-63.9v-76.7c84.4-6.3,151.1-76.9,15=
1.1-162.8 c0-6.8-5.5-12.3-12.3-12.3s-12.3,5.5-12.3,12.3c0,76.6-62.3,138.9-1=
38.9,138.9s-138.9-62.3-138.9-138.9 C106.6,220,101.2,214.5,94.4,214.5z"></pa=
th></g></g></svg></span></button></div><div class=3D"drag-block" title=3D"=
=E6=8C=89=E4=BD=8F=E4=B8=8D=E6=94=BE=E5=8F=AF=E4=BB=A5=E6=8B=96=E5=8A=A8"><=
/div><div class=3D"right"><div style=3D"font-size: 0px; position: relative;=
"><button type=3D"button" title=3D"=E4=BD=A0=E6=9C=89 1 =E6=9D=A1=E6=9C=AA=
=E8=AF=BB=E6=B6=88=E6=81=AF" class=3D"bp4-button bp4-minimal bp4-small"><sp=
an icon=3D"notifications" aria-hidden=3D"true" class=3D"bp4-icon bp4-icon-n=
otifications"><svg data-icon=3D"notifications" width=3D"14" height=3D"14" v=
iewBox=3D"0 0 16 16" role=3D"img"><path d=3D"M8 16c1.1 0 2-.9 2-2H6c0 1.1.9=
 2 2 2zm6-5c-.55 0-1-.45-1-1V6c0-2.43-1.73-4.45-4.02-4.9 0-.04.02-.06.02-.1=
 0-.55-.45-1-1-1S7 .45 7 1c0 .04.02.06.02.1A4.992 4.992 0 003 6v4c0 .55-.45=
 1-1 1s-1 .45-1 1 .45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z" fill-rule=3D"ev=
enodd"></path></svg></span></button><div style=3D"position: absolute; backg=
round: rgb(243, 1, 1); width: 6px; height: 6px; border-radius: 3px; right: =
3px; top: 1px;"></div></div><button type=3D"button" disabled=3D"" title=3D"=
=E6=B7=BB=E5=8A=A0=E5=88=B0=E6=94=B6=E8=97=8F=E5=A4=B9" class=3D"bp4-button=
 bp4-disabled bp4-minimal bp4-small" tabindex=3D"-1"><span icon=3D"star-emp=
ty" aria-hidden=3D"true" class=3D"bp4-icon bp4-icon-star-empty"><svg data-i=
con=3D"star-empty" width=3D"14" height=3D"14" viewBox=3D"0 0 16 16" role=3D=
"img"><path d=3D"M16 6.11l-5.53-.84L8 0 5.53 5.27 0 6.11l4 4.1L3.06 16 8 13=
.27 12.94 16 12 10.21l4-4.1zM4.91 13.2l.59-3.62L3 7.02l3.45-.53L8 3.2l1.55 =
3.29 3.45.53-2.5 2.56.59 3.62L8 11.49 4.91 13.2z" fill-rule=3D"evenodd"></p=
ath></svg></span></button><button type=3D"button" class=3D"bp4-button bp4-m=
inimal bp4-small settings" title=3D"=E5=BF=AB=E6=8D=B7=E8=AE=BE=E7=BD=AE"><=
span icon=3D"cog" aria-hidden=3D"true" class=3D"bp4-icon bp4-icon-cog"><svg=
 data-icon=3D"cog" width=3D"14" height=3D"14" viewBox=3D"0 0 16 16" role=3D=
"img"><path d=3D"M15.19 6.39h-1.85c-.11-.37-.27-.71-.45-1.04l1.36-1.36c.31-=
.31.31-.82 0-1.13l-1.13-1.13a.803.803 0 00-1.13 0l-1.36 1.36c-.33-.17-.67-.=
33-1.04-.44V.79c0-.44-.36-.8-.8-.8h-1.6c-.44 0-.8.36-.8.8v1.86c-.39.12-.75.=
28-1.1.47l-1.3-1.3c-.3-.3-.79-.3-1.09 0L1.82 2.91c-.3.3-.3.79 0 1.09l1.3 1.=
3c-.2.34-.36.7-.48 1.09H.79c-.44 0-.8.36-.8.8v1.6c0 .44.36.8.8.8h1.85c.11.3=
7.27.71.45 1.04l-1.36 1.36c-.31.31-.31.82 0 1.13l1.13 1.13c.31.31.82.31 1.1=
3 0l1.36-1.36c.33.18.67.33 1.04.44v1.86c0 .44.36.8.8.8h1.6c.44 0 .8-.36.8-.=
8v-1.86c.39-.12.75-.28 1.1-.47l1.3 1.3c.3.3.79.3 1.09 0l1.09-1.09c.3-.3.3-.=
79 0-1.09l-1.3-1.3c.19-.35.36-.71.48-1.1h1.85c.44 0 .8-.36.8-.8v-1.6a.816.8=
16 0 00-.81-.79zm-7.2 4.6c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3=
 3z" fill-rule=3D"evenodd"></path></svg></span></button><button type=3D"but=
ton" title=3D"=E5=85=B3=E9=97=AD(Esc)" class=3D"bp4-button bp4-minimal bp4-=
small"><span icon=3D"cross" aria-hidden=3D"true" class=3D"bp4-icon bp4-icon=
-cross"><svg data-icon=3D"cross" width=3D"18" height=3D"18" viewBox=3D"0 0 =
16 16" role=3D"img"><path d=3D"M9.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 =
1.003 0 00-1.71-.71L8 6.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L6.59 8 3.3 =
11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L8 9.41l3.29 3.29c.18.19.4=
3.3.71.3a1.003 1.003 0 00.71-1.71L9.41 8z" fill-rule=3D"evenodd"></path></s=
vg></span></button></div></div><div class=3D"bp4-collapse"><div class=3D"bp=
4-collapse-body" aria-hidden=3D"true"><div class=3D"bp4-card bp4-elevation-=
0 quick-settings"><div><span class=3D"bp4-popover-wrapper lang-select"><spa=
n aria-haspopup=3D"true" class=3D"bp4-popover-target"><div class=3D""><butt=
on type=3D"button" class=3D"bp4-button bp4-small"><span class=3D"bp4-button=
-text">=E8=87=AA=E5=8A=A8=E6=A3=80=E6=B5=8B</span><span icon=3D"caret-down"=
 aria-hidden=3D"true" class=3D"bp4-icon bp4-icon-caret-down"><svg data-icon=
=3D"caret-down" width=3D"16" height=3D"16" viewBox=3D"0 0 16 16" role=3D"im=
g"><path d=3D"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.=
1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z" fill-rule=3D"even=
odd"></path></svg></span></button></div></span></span><span icon=3D"arrow-r=
ight" aria-hidden=3D"true" class=3D"bp4-icon bp4-icon-arrow-right" style=3D=
"margin: 0px 10px;"><svg data-icon=3D"arrow-right" width=3D"12" height=3D"1=
2" viewBox=3D"0 0 16 16" role=3D"img"><path d=3D"M14.7 7.29l-5-5a.965.965 0=
 00-.71-.3 1.003 1.003 0 00-.71 1.71l3.29 3.29H1.99c-.55 0-1 .45-1 1s.45 1 =
1 1h9.59l-3.29 3.29a1.003 1.003 0 001.42 1.42l5-5c.18-.18.29-.43.29-.71s-.1=
2-.52-.3-.7z" fill-rule=3D"evenodd"></path></svg></span><span class=3D"bp4-=
popover-wrapper lang-select"><span aria-haspopup=3D"true" class=3D"bp4-popo=
ver-target"><div class=3D""><button type=3D"button" class=3D"bp4-button bp4=
-small"><span class=3D"bp4-button-text">=E4=B8=AD=E6=96=87(=E7=AE=80=E4=BD=
=93)</span><span icon=3D"caret-down" aria-hidden=3D"true" class=3D"bp4-icon=
 bp4-icon-caret-down"><svg data-icon=3D"caret-down" width=3D"16" height=3D"=
16" viewBox=3D"0 0 16 16" role=3D"img"><path d=3D"M12 6.5c0-.28-.22-.5-.5-.=
5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-=
.09.13-.2.13-.33z" fill-rule=3D"evenodd"></path></svg></span></button></div=
></span></span></div><div><label class=3D"bp4-control bp4-checkbox bp4-inli=
ne"><input type=3D"checkbox" checked=3D""><span class=3D"bp4-control-indica=
tor"></span>=E8=B0=B7=E6=AD=8C</label><label class=3D"bp4-control bp4-check=
box bp4-inline"><input type=3D"checkbox"><span class=3D"bp4-control-indicat=
or"></span>DeepL</label><label class=3D"bp4-control bp4-checkbox bp4-inline=
"><input type=3D"checkbox"><span class=3D"bp4-control-indicator"></span>=E7=
=99=BE=E5=BA=A6</label><label class=3D"bp4-control bp4-checkbox bp4-inline"=
><input type=3D"checkbox"><span class=3D"bp4-control-indicator"></span>=E7=
=99=BE=E5=BA=A6(=E4=B8=93=E4=B8=9A=E7=89=88)</label><label class=3D"bp4-con=
trol bp4-checkbox bp4-inline"><input type=3D"checkbox"><span class=3D"bp4-c=
ontrol-indicator"></span>=E8=85=BE=E8=AE=AF</label><label class=3D"bp4-cont=
rol bp4-checkbox bp4-inline"><input type=3D"checkbox"><span class=3D"bp4-co=
ntrol-indicator"></span>=E5=BD=A9=E4=BA=91</label><label class=3D"bp4-contr=
ol bp4-checkbox bp4-inline"><input type=3D"checkbox"><span class=3D"bp4-con=
trol-indicator"></span>=E9=98=BF=E9=87=8C</label><label class=3D"bp4-contro=
l bp4-checkbox bp4-inline"><input type=3D"checkbox"><span class=3D"bp4-cont=
rol-indicator"></span>=E9=98=BF=E9=87=8C(=E4=B8=93=E4=B8=9A=E7=89=88)</labe=
l><label class=3D"bp4-control bp4-checkbox bp4-inline"><input type=3D"check=
box"><span class=3D"bp4-control-indicator"></span>=E6=9C=89=E9=81=93</label=
><label class=3D"bp4-control bp4-checkbox bp4-inline"><input type=3D"checkb=
ox"><span class=3D"bp4-control-indicator"></span>=E7=81=AB=E5=B1=B1</label>=
<label class=3D"bp4-control bp4-checkbox bp4-inline"><input type=3D"checkbo=
x"><span class=3D"bp4-control-indicator"></span>=E5=BF=85=E5=BA=94=E8=AF=8D=
=E5=85=B8</label><label class=3D"bp4-control bp4-checkbox bp4-inline"><inpu=
t type=3D"checkbox"><span class=3D"bp4-control-indicator"></span>=E6=90=9C=
=E7=8B=97</label></div><div><label class=3D"bp4-control bp4-checkbox bp4-in=
line"><input type=3D"checkbox"><span class=3D"bp4-control-indicator"></span=
>=E8=87=AA=E5=8A=A8=E6=9C=97=E8=AF=BB</label><span class=3D"bp4-popover-wra=
pper"><span aria-haspopup=3D"true" class=3D"bp4-popover-target"><label clas=
s=3D"bp4-control bp4-checkbox bp4-disabled bp4-inline"><input disabled=3D""=
 tabindex=3D"0" type=3D"checkbox"><span class=3D"bp4-control-indicator"></s=
pan>=E8=87=AA=E5=8A=A8=E5=A4=8D=E5=88=B6</label></span></span></div><div><l=
abel class=3D"bp4-control bp4-radio bp4-inline"><input name=3D"Blueprint4.R=
adioGroup-0" type=3D"radio" value=3D"small" checked=3D""><span class=3D"bp4=
-control-indicator"></span>=E5=B0=8F</label><label class=3D"bp4-control bp4=
-radio bp4-inline"><input name=3D"Blueprint4.RadioGroup-0" type=3D"radio" v=
alue=3D"middle"><span class=3D"bp4-control-indicator"></span>=E4=B8=AD</lab=
el><label class=3D"bp4-control bp4-radio bp4-inline"><input name=3D"Bluepri=
nt4.RadioGroup-0" type=3D"radio" value=3D"large"><span class=3D"bp4-control=
-indicator"></span>=E5=A4=A7</label></div><div><label class=3D"bp4-control =
bp4-checkbox bp4-inline"><input type=3D"checkbox"><span class=3D"bp4-contro=
l-indicator"></span>=E6=98=BE=E7=A4=BA=E6=96=87=E6=9C=AC=E6=A1=86</label><l=
abel class=3D"bp4-control bp4-checkbox bp4-inline" style=3D"margin-right: 0=
px;"><input type=3D"checkbox"><span class=3D"bp4-control-indicator"></span>=
=E9=BC=A0=E6=A0=87=E6=82=AC=E6=B5=AE=E5=8F=96=E8=AF=8D</label></div><a clas=
s=3D"bp4-text-small">=E6=89=93=E5=BC=80=E5=AE=8C=E6=95=B4=E8=AE=BE=E7=BD=AE=
</a><a class=3D"bp4-text-small" style=3D"margin-left: 15px;"><span icon=3D"=
crown" aria-hidden=3D"true" class=3D"bp4-icon bp4-icon-crown" style=3D"posi=
tion: relative; top: -1px;"><svg data-icon=3D"crown" width=3D"14" height=3D=
"14" viewBox=3D"0 0 16 16" role=3D"img"><path d=3D"M2 6l3 2 3-4 3 4 3-2-1 6=
H3L2 6zm6-5a1 1 0 110 2 1 1 0 010-2zM1 3a1 1 0 110 2 1 1 0 010-2zm14 0a1 1 =
0 110 2 1 1 0 010-2zM3 13h10v2H3v-2z" fill-rule=3D"evenodd"></path></svg></=
span> =E5=BC=80=E9=80=9A=E4=BC=9A=E5=91=98</a></div></div></div></div><div =
class=3D"body"><p>=E8=AF=B7=E8=BE=93=E5=85=A5=E9=9C=80=E8=A6=81=E7=BF=BB=E8=
=AF=91=E7=9A=84=E6=96=87=E6=9C=AC=E3=80=82</p></div></div><div class=3D"arr=
ow"></div></div><div id=3D"web-trs-panel"></div></div></div></template></di=
v></div></html>
------MultipartBoundary--ZsgQWMp86sQeRHgtGTIEquPbggicGkcWaCMUKTzzJi----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-b06e2837-dc56-4f47-be69-c39a484fd6c3@mhtml.blink

@charset "utf-8";

:root { --toastify-color-light: #fff; --toastify-color-dark: #121212; --toa=
stify-color-info: #3498db; --toastify-color-success: #07bc0c; --toastify-co=
lor-warning: #f1c40f; --toastify-color-error: #e74c3c; --toastify-color-tra=
nsparent: rgba(255, 255, 255, 0.7); --toastify-icon-color-info: var(--toast=
ify-color-info); --toastify-icon-color-success: var(--toastify-color-succes=
s); --toastify-icon-color-warning: var(--toastify-color-warning); --toastif=
y-icon-color-error: var(--toastify-color-error); --toastify-toast-width: 32=
0px; --toastify-toast-background: #fff; --toastify-toast-min-height: 64px; =
--toastify-toast-max-height: 800px; --toastify-font-family: sans-serif; --t=
oastify-z-index: 9999; --toastify-text-color-light: #757575; --toastify-tex=
t-color-dark: #fff; --toastify-text-color-info: #fff; --toastify-text-color=
-success: #fff; --toastify-text-color-warning: #fff; --toastify-text-color-=
error: #fff; --toastify-spinner-color: #616161; --toastify-spinner-color-em=
pty-area: #e0e0e0; --toastify-color-progress-light: linear-gradient( to rig=
ht, #4cd964, #5ac8fa, #007aff, #34aadc, #5856d6, #ff2d55 ); --toastify-colo=
r-progress-dark: #bb86fc; --toastify-color-progress-info: var(--toastify-co=
lor-info); --toastify-color-progress-success: var(--toastify-color-success)=
; --toastify-color-progress-warning: var(--toastify-color-warning); --toast=
ify-color-progress-error: var(--toastify-color-error); }

.Toastify__toast-container { z-index: var(--toastify-z-index); transform: t=
ranslate3d(0, 0, var(--toastify-z-index) px); position: fixed; padding: 4px=
; width: var(--toastify-toast-width); box-sizing: border-box; color: rgb(25=
5, 255, 255); }

.Toastify__toast-container--top-left { top: 1em; left: 1em; }

.Toastify__toast-container--top-center { top: 1em; left: 50%; transform: tr=
anslateX(-50%); }

.Toastify__toast-container--top-right { top: 1em; right: 1em; }

.Toastify__toast-container--bottom-left { bottom: 1em; left: 1em; }

.Toastify__toast-container--bottom-center { bottom: 1em; left: 50%; transfo=
rm: translateX(-50%); }

.Toastify__toast-container--bottom-right { bottom: 1em; right: 1em; }

@media only screen and (max-width: 480px) {
  .Toastify__toast-container { width: 100vw; padding: 0px; left: 0px; margi=
n: 0px; }
  .Toastify__toast-container--top-left, .Toastify__toast-container--top-cen=
ter, .Toastify__toast-container--top-right { top: 0px; transform: translate=
X(0px); }
  .Toastify__toast-container--bottom-left, .Toastify__toast-container--bott=
om-center, .Toastify__toast-container--bottom-right { bottom: 0px; transfor=
m: translateX(0px); }
  .Toastify__toast-container--rtl { right: 0px; left: initial; }
}

.Toastify__toast { position: relative; min-height: var(--toastify-toast-min=
-height); box-sizing: border-box; margin-bottom: 1rem; padding: 8px; border=
-radius: 4px; box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 10px 0px, rgba(0, 0, 0=
, 0.05) 0px 2px 15px 0px; display: flex; justify-content: space-between; ma=
x-height: var(--toastify-toast-max-height); overflow: hidden; font-family: =
var(--toastify-font-family); cursor: pointer; direction: ltr; z-index: 0; }

.Toastify__toast--rtl { direction: rtl; }

.Toastify__toast-body { margin: auto 0px; flex: 1 1 auto; padding: 6px; dis=
play: flex; align-items: center; }

.Toastify__toast-body > div:last-child { flex: 1 1 0%; }

.Toastify__toast-icon { margin-inline-end: 10px; width: 20px; flex-shrink: =
0; display: flex; }

.Toastify--animate { animation-fill-mode: both; animation-duration: 0.7s; }

.Toastify--animate-icon { animation-fill-mode: both; animation-duration: 0.=
3s; }

@media only screen and (max-width: 480px) {
  .Toastify__toast { margin-bottom: 0px; border-radius: 0px; }
}

.Toastify__toast-theme--dark { background: var(--toastify-color-dark); colo=
r: var(--toastify-text-color-dark); }

.Toastify__toast-theme--light { background: var(--toastify-color-light); co=
lor: var(--toastify-text-color-light); }

.Toastify__toast-theme--colored.Toastify__toast--default { background: var(=
--toastify-color-light); color: var(--toastify-text-color-light); }

.Toastify__toast-theme--colored.Toastify__toast--info { color: var(--toasti=
fy-text-color-info); background: var(--toastify-color-info); }

.Toastify__toast-theme--colored.Toastify__toast--success { color: var(--toa=
stify-text-color-success); background: var(--toastify-color-success); }

.Toastify__toast-theme--colored.Toastify__toast--warning { color: var(--toa=
stify-text-color-warning); background: var(--toastify-color-warning); }

.Toastify__toast-theme--colored.Toastify__toast--error { color: var(--toast=
ify-text-color-error); background: var(--toastify-color-error); }

.Toastify__progress-bar-theme--light { background: var(--toastify-color-pro=
gress-light); }

.Toastify__progress-bar-theme--dark { background: var(--toastify-color-prog=
ress-dark); }

.Toastify__progress-bar--info { background: var(--toastify-color-progress-i=
nfo); }

.Toastify__progress-bar--success { background: var(--toastify-color-progres=
s-success); }

.Toastify__progress-bar--warning { background: var(--toastify-color-progres=
s-warning); }

.Toastify__progress-bar--error { background: var(--toastify-color-progress-=
error); }

.Toastify__progress-bar-theme--colored.Toastify__progress-bar--info, .Toast=
ify__progress-bar-theme--colored.Toastify__progress-bar--success, .Toastify=
__progress-bar-theme--colored.Toastify__progress-bar--warning, .Toastify__p=
rogress-bar-theme--colored.Toastify__progress-bar--error { background: var(=
--toastify-color-transparent); }

.Toastify__close-button { color: rgb(255, 255, 255); background: transparen=
t; outline: none; border: none; padding: 0px; cursor: pointer; opacity: 0.7=
; transition: all 0.3s ease 0s; align-self: flex-start; }

.Toastify__close-button--light { color: rgb(0, 0, 0); opacity: 0.3; }

.Toastify__close-button > svg { fill: currentcolor; height: 16px; width: 14=
px; }

.Toastify__close-button:hover, .Toastify__close-button:focus { opacity: 1; =
}

@keyframes Toastify__trackProgress {=20
  0% { transform: scaleX(1); }
  100% { transform: scaleX(0); }
}

.Toastify__progress-bar { position: absolute; bottom: 0px; left: 0px; width=
: 100%; height: 5px; z-index: var(--toastify-z-index); opacity: 0.7; transf=
orm-origin: left center; }

.Toastify__progress-bar--animated { animation: 0s linear 0s 1 normal forwar=
ds running Toastify__trackProgress; }

.Toastify__progress-bar--controlled { transition: transform 0.2s ease 0s; }

.Toastify__progress-bar--rtl { right: 0px; left: initial; transform-origin:=
 right center; }

.Toastify__spinner { width: 20px; height: 20px; box-sizing: border-box; bor=
der-width: 2px; border-style: solid; border-image: initial; border-radius: =
100%; border-top-color: ; border-bottom-color: ; border-left-color: ; borde=
r-right-color: var(--toastify-spinner-color); animation: 0.65s linear 0s in=
finite normal none running Toastify__spin; }

@keyframes Toastify__bounceInRight {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(3000px, 0px, 0px); }
  60% { opacity: 1; transform: translate3d(-25px, 0px, 0px); }
  75% { transform: translate3d(10px, 0px, 0px); }
  90% { transform: translate3d(-5px, 0px, 0px); }
  100% { transform: none; }
}

@keyframes Toastify__bounceOutRight {=20
  20% { opacity: 1; transform: translate3d(-20px, 0px, 0px); }
  100% { opacity: 0; transform: translate3d(2000px, 0px, 0px); }
}

@keyframes Toastify__bounceInLeft {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(-3000px, 0px, 0px); }
  60% { opacity: 1; transform: translate3d(25px, 0px, 0px); }
  75% { transform: translate3d(-10px, 0px, 0px); }
  90% { transform: translate3d(5px, 0px, 0px); }
  100% { transform: none; }
}

@keyframes Toastify__bounceOutLeft {=20
  20% { opacity: 1; transform: translate3d(20px, 0px, 0px); }
  100% { opacity: 0; transform: translate3d(-2000px, 0px, 0px); }
}

@keyframes Toastify__bounceInUp {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(0px, 3000px, 0px); }
  60% { opacity: 1; transform: translate3d(0px, -20px, 0px); }
  75% { transform: translate3d(0px, 10px, 0px); }
  90% { transform: translate3d(0px, -5px, 0px); }
  100% { transform: translate3d(0px, 0px, 0px); }
}

@keyframes Toastify__bounceOutUp {=20
  20% { transform: translate3d(0px, -10px, 0px); }
  40%, 45% { opacity: 1; transform: translate3d(0px, 20px, 0px); }
  100% { opacity: 0; transform: translate3d(0px, -2000px, 0px); }
}

@keyframes Toastify__bounceInDown {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(0px, -3000px, 0px); }
  60% { opacity: 1; transform: translate3d(0px, 25px, 0px); }
  75% { transform: translate3d(0px, -10px, 0px); }
  90% { transform: translate3d(0px, 5px, 0px); }
  100% { transform: none; }
}

@keyframes Toastify__bounceOutDown {=20
  20% { transform: translate3d(0px, 10px, 0px); }
  40%, 45% { opacity: 1; transform: translate3d(0px, -20px, 0px); }
  100% { opacity: 0; transform: translate3d(0px, 2000px, 0px); }
}

.Toastify__bounce-enter--top-left, .Toastify__bounce-enter--bottom-left { a=
nimation-name: Toastify__bounceInLeft; }

.Toastify__bounce-enter--top-right, .Toastify__bounce-enter--bottom-right {=
 animation-name: Toastify__bounceInRight; }

.Toastify__bounce-enter--top-center { animation-name: Toastify__bounceInDow=
n; }

.Toastify__bounce-enter--bottom-center { animation-name: Toastify__bounceIn=
Up; }

.Toastify__bounce-exit--top-left, .Toastify__bounce-exit--bottom-left { ani=
mation-name: Toastify__bounceOutLeft; }

.Toastify__bounce-exit--top-right, .Toastify__bounce-exit--bottom-right { a=
nimation-name: Toastify__bounceOutRight; }

.Toastify__bounce-exit--top-center { animation-name: Toastify__bounceOutUp;=
 }

.Toastify__bounce-exit--bottom-center { animation-name: Toastify__bounceOut=
Down; }

@keyframes Toastify__zoomIn {=20
  0% { opacity: 0; transform: scale3d(0.3, 0.3, 0.3); }
  50% { opacity: 1; }
}

@keyframes Toastify__zoomOut {=20
  0% { opacity: 1; }
  50% { opacity: 0; transform: scale3d(0.3, 0.3, 0.3); }
  100% { opacity: 0; }
}

.Toastify__zoom-enter { animation-name: Toastify__zoomIn; }

.Toastify__zoom-exit { animation-name: Toastify__zoomOut; }

@keyframes Toastify__flipIn {=20
  0% { transform: perspective(400px) rotate3d(1, 0, 0, 90deg); animation-ti=
ming-function: ease-in; opacity: 0; }
  40% { transform: perspective(400px) rotate3d(1, 0, 0, -20deg); animation-=
timing-function: ease-in; }
  60% { transform: perspective(400px) rotate3d(1, 0, 0, 10deg); opacity: 1;=
 }
  80% { transform: perspective(400px) rotate3d(1, 0, 0, -5deg); }
  100% { transform: perspective(400px); }
}

@keyframes Toastify__flipOut {=20
  0% { transform: perspective(400px); }
  30% { transform: perspective(400px) rotate3d(1, 0, 0, -20deg); opacity: 1=
; }
  100% { transform: perspective(400px) rotate3d(1, 0, 0, 90deg); opacity: 0=
; }
}

.Toastify__flip-enter { animation-name: Toastify__flipIn; }

.Toastify__flip-exit { animation-name: Toastify__flipOut; }

@keyframes Toastify__slideInRight {=20
  0% { transform: translate3d(110%, 0px, 0px); visibility: visible; }
  100% { transform: translate3d(0px, 0px, 0px); }
}

@keyframes Toastify__slideInLeft {=20
  0% { transform: translate3d(-110%, 0px, 0px); visibility: visible; }
  100% { transform: translate3d(0px, 0px, 0px); }
}

@keyframes Toastify__slideInUp {=20
  0% { transform: translate3d(0px, 110%, 0px); visibility: visible; }
  100% { transform: translate3d(0px, 0px, 0px); }
}

@keyframes Toastify__slideInDown {=20
  0% { transform: translate3d(0px, -110%, 0px); visibility: visible; }
  100% { transform: translate3d(0px, 0px, 0px); }
}

@keyframes Toastify__slideOutRight {=20
  0% { transform: translate3d(0px, 0px, 0px); }
  100% { visibility: hidden; transform: translate3d(110%, 0px, 0px); }
}

@keyframes Toastify__slideOutLeft {=20
  0% { transform: translate3d(0px, 0px, 0px); }
  100% { visibility: hidden; transform: translate3d(-110%, 0px, 0px); }
}

@keyframes Toastify__slideOutDown {=20
  0% { transform: translate3d(0px, 0px, 0px); }
  100% { visibility: hidden; transform: translate3d(0px, 500px, 0px); }
}

@keyframes Toastify__slideOutUp {=20
  0% { transform: translate3d(0px, 0px, 0px); }
  100% { visibility: hidden; transform: translate3d(0px, -500px, 0px); }
}

.Toastify__slide-enter--top-left, .Toastify__slide-enter--bottom-left { ani=
mation-name: Toastify__slideInLeft; }

.Toastify__slide-enter--top-right, .Toastify__slide-enter--bottom-right { a=
nimation-name: Toastify__slideInRight; }

.Toastify__slide-enter--top-center { animation-name: Toastify__slideInDown;=
 }

.Toastify__slide-enter--bottom-center { animation-name: Toastify__slideInUp=
; }

.Toastify__slide-exit--top-left, .Toastify__slide-exit--bottom-left { anima=
tion-name: Toastify__slideOutLeft; }

.Toastify__slide-exit--top-right, .Toastify__slide-exit--bottom-right { ani=
mation-name: Toastify__slideOutRight; }

.Toastify__slide-exit--top-center { animation-name: Toastify__slideOutUp; }

.Toastify__slide-exit--bottom-center { animation-name: Toastify__slideOutDo=
wn; }

@keyframes Toastify__spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
------MultipartBoundary--ZsgQWMp86sQeRHgtGTIEquPbggicGkcWaCMUKTzzJi----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-083693bd-a50f-4546-9d2e-2008ae4eebd7@mhtml.blink

@charset "utf-8";

*, ::before, ::after { box-sizing: border-box; border-width: 0px; border-st=
yle: solid; border-color: rgb(229, 231, 235); }

::before, ::after { --tw-content: ""; }

html { line-height: 1.5; text-size-adjust: 100%; tab-size: 4; font-family: =
ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Ro=
boto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji"=
, "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; }

body { margin: 0px; line-height: inherit; }

hr { height: 0px; color: inherit; border-top-width: 1px; }

abbr:where([title]) { text-decoration: underline dotted; }

h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }

a { color: inherit; text-decoration: inherit; }

b, strong { font-weight: bolder; }

code, kbd, samp, pre { font-family: ui-monospace, SFMono-Regular, Menlo, Mo=
naco, Consolas, "Liberation Mono", "Courier New", monospace; font-size: 1em=
; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

table { text-indent: 0px; border-color: inherit; border-collapse: collapse;=
 }

button, input, optgroup, select, textarea { font-family: inherit; font-size=
: 100%; font-weight: inherit; line-height: inherit; color: inherit; margin:=
 0px; padding: 0px; }

button, select { text-transform: none; }

button, [type=3D"button"], [type=3D"reset"], [type=3D"submit"] { appearance=
: button; background-color: transparent; background-image: none; }

progress { vertical-align: baseline; }

::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; }

[type=3D"search"] { appearance: textfield; outline-offset: -2px; }

::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { appearance: button; font: inherit; }

summary { display: list-item; }

blockquote, dl, dd, h1, h2, h3, h4, h5, h6, hr, figure, p, pre { margin: 0p=
x; }

fieldset { margin: 0px; padding: 0px; }

legend { padding: 0px; }

ol, ul, menu { list-style: none; margin: 0px; padding: 0px; }

textarea { resize: vertical; }

input::placeholder, textarea::placeholder { opacity: 1; color: rgb(156, 163=
, 175); }

button, [role=3D"button"] { cursor: pointer; }

:disabled { cursor: default; }

img, svg, video, canvas, audio, iframe, embed, object { display: block; ver=
tical-align: middle; }

img, video { max-width: 100%; height: auto; }

*, ::before, ::after { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; =
--tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; -=
-tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: =
; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-ordinal: =
; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-=
numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --tw-ri=
ng-offset-color: #fff; --tw-ring-color: rgb(59 130 246 / 0.5); --tw-ring-of=
fset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shadow: 0 0 #0000=
; --tw-shadow-colored: 0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-cont=
rast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: =
; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-bri=
ghtness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdr=
op-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-back=
drop-saturate: ; --tw-backdrop-sepia: ; }

::backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --tw-trans=
late-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y=
: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; --tw-pin=
ch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-ordinal: ; --tw-sla=
shed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-numeric-fr=
action: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --tw-ring-offset-=
color: #fff; --tw-ring-color: rgb(59 130 246 / 0.5); --tw-ring-offset-shado=
w: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shadow: 0 0 #0000; --tw-sha=
dow-colored: 0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-contrast: ; --=
tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ; --tw-sep=
ia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brightness: ;=
 --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdrop-hue-rot=
ate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backdrop-satur=
ate: ; --tw-backdrop-sepia: ; }

.fixed { position: fixed; }

.relative { position: relative; }

.sticky { position: sticky; }

.bottom-0 { bottom: 0px; }

.top-0 { top: 0px; }

.z-50 { z-index: 50; }

.mx-auto { margin-left: auto; margin-right: auto; }

.ml-2 { margin-left: 0.5rem; }

.mt-2 { margin-top: 0.5rem; }

.mb-2 { margin-bottom: 0.5rem; }

.mr-2 { margin-right: 0.5rem; }

.block { display: block; }

.inline { display: inline; }

.flex { display: flex; }

.inline-flex { display: inline-flex; }

.grid { display: grid; }

.h-full { height: 100%; }

.h-8 { height: 2rem; }

.h-4 { height: 1rem; }

.w-full { width: 100%; }

.w-4 { width: 1rem; }

.w-1\/2 { width: 50%; }

.w-\[30\%\] { width: 30%; }

.flex-shrink-0 { flex-shrink: 0; }

.flex-row { flex-direction: row; }

.flex-col { flex-direction: column; }

.items-center { align-items: center; }

.justify-center { justify-content: center; }

.justify-items-center { justify-items: center; }

.space-y-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom:=
 calc(0.5rem * var(--tw-space-y-reverse)); }

.space-y-1\.5 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; =
margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse))); margin-bo=
ttom: calc(0.375rem * var(--tw-space-y-reverse)); }

.space-y-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom=
: calc(0.25rem * var(--tw-space-y-reverse)); }

.space-x-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(0.5rem * var(--tw-space-x-reverse)); margin-left: calc(0.5r=
em * calc(1 - var(--tw-space-x-reverse))); }

.space-y-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: c=
alc(1rem * var(--tw-space-y-reverse)); }

.space-x-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(1rem * var(--tw-space-x-reverse)); margin-left: calc(1rem *=
 calc(1 - var(--tw-space-x-reverse))); }

.place-self-start { place-self: start; }

.self-end { align-self: flex-end; }

.justify-self-center { justify-self: center; }

.overflow-hidden { overflow: hidden; }

.text-ellipsis { text-overflow: ellipsis; }

.rounded-xl { border-radius: 0.75rem; }

.rounded-md { border-radius: 0.375rem; }

.rounded { border-radius: 0.25rem; }

.rounded-full { border-radius: 9999px; }

.rounded-lg { border-radius: 0.5rem; }

.border-b { border-bottom-width: 1px; }

.bg-white { --tw-bg-opacity: 1; background-color: rgb(255 255 255 / var(--t=
w-bg-opacity)); }

.bg-blue-200 { --tw-bg-opacity: 1; background-color: rgb(191 219 254 / var(=
--tw-bg-opacity)); }

.bg-green-200 { --tw-bg-opacity: 1; background-color: rgb(187 247 208 / var=
(--tw-bg-opacity)); }

.bg-red-200 { --tw-bg-opacity: 1; background-color: rgb(254 202 202 / var(-=
-tw-bg-opacity)); }

.bg-orange-400 { --tw-bg-opacity: 1; background-color: rgb(251 146 60 / var=
(--tw-bg-opacity)); }

.bg-gray-50 { --tw-bg-opacity: 1; background-color: rgb(249 250 251 / var(-=
-tw-bg-opacity)); }

.bg-orange-200 { --tw-bg-opacity: 1; background-color: rgb(254 215 170 / va=
r(--tw-bg-opacity)); }

.bg-gradient-to-br { background-image: linear-gradient(to bottom right, var=
(--tw-gradient-stops)); }

.from-purple-600 { --tw-gradient-from: #9333ea; --tw-gradient-to: rgb(147 5=
1 234 / 0); --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient=
-to); }

.to-blue-500 { --tw-gradient-to: #3b82f6; }

.p-1\.5 { padding: 0.375rem; }

.p-1 { padding: 0.25rem; }

.p-4 { padding: 1rem; }

.p-0\.5 { padding: 0.125rem; }

.p-0 { padding: 0px; }

.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }

.py-4 { padding-top: 1rem; padding-bottom: 1rem; }

.px-4 { padding-left: 1rem; padding-right: 1rem; }

.py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }

.px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }

.py-1 { padding-top: 0.25rem; padding-bottom: 0.25rem; }

.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }

.py-1\.5 { padding-top: 0.375rem; padding-bottom: 0.375rem; }

.px-20 { padding-left: 5rem; padding-right: 5rem; }

.py-2\.5 { padding-top: 0.625rem; padding-bottom: 0.625rem; }

.pt-4 { padding-top: 1rem; }

.pb-10 { padding-bottom: 2.5rem; }

.indent-8 { text-indent: 2rem; }

.text-base { font-size: 1rem; line-height: 1.5rem; }

.text-lg { font-size: 1.125rem; line-height: 1.75rem; }

.text-xl { font-size: 1.25rem; line-height: 1.75rem; }

.text-sm { font-size: 0.875rem; line-height: 1.25rem; }

.text-2xl { font-size: 1.5rem; line-height: 2rem; }

.text-5xl { font-size: 3rem; line-height: 1; }

.font-bold { font-weight: 700; }

.font-medium { font-weight: 500; }

.text-black { --tw-text-opacity: 1; color: rgb(0 0 0 / var(--tw-text-opacit=
y)); }

.text-gray-500 { --tw-text-opacity: 1; color: rgb(107 114 128 / var(--tw-te=
xt-opacity)); }

.text-white { --tw-text-opacity: 1; color: rgb(255 255 255 / var(--tw-text-=
opacity)); }

.text-gray-900 { --tw-text-opacity: 1; color: rgb(17 24 39 / var(--tw-text-=
opacity)); }

.shadow { --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0=
 0 / 0.1); --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2=
px -1px var(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow, 0 =
0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow); }

.backdrop-blur { --tw-backdrop-blur: blur(8px); backdrop-filter: var(--tw-b=
ackdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var=
(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-i=
nvert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-back=
drop-sepia); }

.transition-colors { transition-property: color, background-color, border-c=
olor, text-decoration-color, fill, stroke; transition-timing-function: cubi=
c-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }

.transition-all { transition-property: all; transition-timing-function: cub=
ic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }

.duration-75 { transition-duration: 75ms; }

.ease-in { transition-timing-function: cubic-bezier(0.4, 0, 1, 1); }

.hover\:bg-orange-500:hover { --tw-bg-opacity: 1; background-color: rgb(249=
 115 22 / var(--tw-bg-opacity)); }

.hover\:text-white:hover { --tw-text-opacity: 1; color: rgb(255 255 255 / v=
ar(--tw-text-opacity)); }

.focus\:outline-none:focus { outline: transparent solid 2px; outline-offset=
: 2px; }

.group:hover .group-hover\:bg-opacity-0 { --tw-bg-opacity: 0; }

.group:hover .group-hover\:from-purple-600 { --tw-gradient-from: #9333ea; -=
-tw-gradient-to: rgb(147 51 234 / 0); --tw-gradient-stops: var(--tw-gradien=
t-from), var(--tw-gradient-to); }

.group:hover .group-hover\:to-blue-500 { --tw-gradient-to: #3b82f6; }

@media (prefers-color-scheme: dark) {
  .dark\:bg-gray-900 { --tw-bg-opacity: 1; background-color: rgb(17 24 39 /=
 var(--tw-bg-opacity)); }
}
------MultipartBoundary--ZsgQWMp86sQeRHgtGTIEquPbggicGkcWaCMUKTzzJi----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-c6521d34-3576-42fc-97bf-7bb0fa9cf435@mhtml.blink

@charset "utf-8";

pre code.hljs { display: block; overflow-x: auto; padding: 1em; }

code.hljs { padding: 3px 5px; }

.hljs { background: rgb(71, 73, 73); color: rgb(209, 217, 225); }

.hljs-comment, .hljs-quote { color: rgb(150, 152, 150); font-style: italic;=
 }

.hljs-addition, .hljs-keyword, .hljs-literal, .hljs-selector-tag, .hljs-typ=
e { color: rgb(204, 153, 204); }

.hljs-number, .hljs-selector-attr, .hljs-selector-pseudo { color: rgb(249, =
145, 87); }

.hljs-doctag, .hljs-regexp, .hljs-string { color: rgb(138, 190, 183); }

.hljs-built_in, .hljs-name, .hljs-section, .hljs-title { color: rgb(181, 18=
9, 104); }

.hljs-class .hljs-title, .hljs-selector-id, .hljs-template-variable, .hljs-=
title.class_, .hljs-variable { color: rgb(255, 204, 102); }

.hljs-name, .hljs-section, .hljs-strong { font-weight: 700; }

.hljs-bullet, .hljs-link, .hljs-meta, .hljs-subst, .hljs-symbol { color: rg=
b(249, 145, 87); }

.hljs-deletion { color: rgb(220, 50, 47); }

.hljs-formula { background: rgb(238, 232, 213); }

.hljs-attr, .hljs-attribute { color: rgb(129, 162, 190); }

.hljs-emphasis { font-style: italic; }
------MultipartBoundary--ZsgQWMp86sQeRHgtGTIEquPbggicGkcWaCMUKTzzJi----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-b67bc66d-99f1-4767-8731-4d3c0c7af5c1@mhtml.blink

@charset "utf-8";

.react-code-diff-lite { --main-c: #4a4a4a; --full-content-b: #fff; --main-c=
ontainer-b: #ddd; --collapse-b: #ddd; --collapse-bg: #c8e1ff; --haeder-bg: =
#f7f7f7; --header-broder-bt: #d8d8d8; --line-add-b: #b4e2b4; --line-add-c: =
#399839; --line-delete-b: #e9aeae; --line-delete-c: #c33; --line-sider-del-=
content-bg: #ffb6ba; --line-sider-ins-content-bg: #97f295; --left-code-line=
-bg: #fff; --left-code-line-c: rgba(0, 0, 0, 0.3); --left-code-line-b: #eee=
; --empty-emptyplaceholder-bg: #f1f1f1; --empty-emptyplaceholder-b: #e1e1e1=
; --del-full-line-bg: #fee8e9; --del-full-line-b: #e9aeae; --ins-full-line-=
bg: #dfd; --ins-full-line-b: #b4e2b4; --info-full-line-bg: #f8fafd; --info-=
full-line-c: rgba(0, 0, 0, 0.3); --info-full-line-b: #b4e2b4; --del-change-=
bg: #fdf2d0; --ins-change-bg: #ded; --text-a: #3572b0; --li-bt: #ddd; --del=
-tag-c: #c33; --ins-tag-c: 399839; --change-tag-c: #d0b44c; --move-tag-c: #=
3572b0; --tag-bg: #fff; }

@media (prefers-color-scheme: dark) {
  .react-code-diff-lite:not(.light) { --main-c: #f0f0f0; --full-content-b: =
#0e1116; --main-container-b: #30363d; --collapse-b: #ddd; --collapse-bg: #c=
8e1ff; --haeder-bg: #0e1220; --header-broder-bt: #30363d; --line-add-b: #b4=
e2b4; --line-add-c: #399839; --line-delete-b: #e9aeae; --line-delete-c: #c3=
3; --line-sider-del-content-bg: #8f1c22; --line-sider-ins-content-bg: #2383=
21; --left-code-line-bg: #30363d; --left-code-line-c: rgba(240, 246, 252, 0=
.3); --left-code-line-b: #111; --empty-emptyplaceholder-bg: #0e1220; --empt=
y-emptyplaceholder-b: #30363d; --del-full-line-bg: rgba(218, 54, 51, 0.1); =
--del-full-line-b: #833f3f; --ins-full-line-bg: rgba(46, 160, 67, 0.1); --i=
ns-full-line-b: #5a8f5a; --info-full-line-bg: rgba(88, 166, 255, 0.1); --in=
fo-full-line-c: #8b949e; --info-full-line-b: #8b949e; --del-change-bg: rgba=
(243, 205, 89, 0.1); --ins-change-bg: rgba(138, 230, 138, 0.1); --text-a: #=
234a70; --li-bt: #ddd; --del-tag-c: #6d1c1c; --ins-tag-c: #1a491a; --change=
-tag-c: #7a6a2d; --move-tag-c: #1a3958; --tag-bg: #30363d; }
}

.react-code-diff-lite.dark { --main-c: #f0f0f0; --full-content-b: #0e1116; =
--main-container-b: #30363d; --collapse-b: #ddd; --collapse-bg: #c8e1ff; --=
haeder-bg: #0e1220; --header-broder-bt: #30363d; --line-add-b: #b4e2b4; --l=
ine-add-c: #399839; --line-delete-b: #e9aeae; --line-delete-c: #c33; --line=
-sider-del-content-bg: #8f1c22; --line-sider-ins-content-bg: #238321; --lef=
t-code-line-bg: #30363d; --left-code-line-c: rgba(240, 246, 252, 0.3); --le=
ft-code-line-b: #111; --empty-emptyplaceholder-bg: #0e1220; --empty-emptypl=
aceholder-b: #30363d; --del-full-line-bg: rgba(218, 54, 51, 0.1); --del-ful=
l-line-b: #833f3f; --ins-full-line-bg: rgba(46, 160, 67, 0.1); --ins-full-l=
ine-b: #5a8f5a; --info-full-line-bg: rgba(88, 166, 255, 0.1); --info-full-l=
ine-c: #8b949e; --info-full-line-b: #8b949e; --del-change-bg: rgba(243, 205=
, 89, 0.1); --ins-change-bg: rgba(138, 230, 138, 0.1); --text-a: #234a70; -=
-li-bt: #ddd; --del-tag-c: #6d1c1c; --ins-tag-c: #1a491a; --change-tag-c: #=
7a6a2d; --move-tag-c: #1a3958; --tag-bg: #30363d; }

.d2h-d-none { display: none; }

.d2h-wrapper { color: var(--main-c); background: var(--full-content-b); tex=
t-align: left; }

.d2h-file-header { display: flex; height: 35px; padding: 5px 10px; border-b=
ottom: 1px solid var(--header-broder-bt); background-color: var(--haeder-bg=
); font-family: "Source Sans Pro", "Helvetica Neue", Helvetica, Arial, sans=
-serif; }

.d2h-file-stats { display: flex; margin-left: auto; font-size: 14px; }

.d2h-lines-added { text-align: right; border: 1px solid var(--line-add-b); =
border-radius: 5px 0px 0px 5px; color: var(--line-add-c); padding: 2px; ver=
tical-align: middle; }

.d2h-lines-deleted { text-align: left; border: 1px solid var(--line-delete-=
b); border-radius: 0px 5px 5px 0px; color: var(--line-delete-c); padding: 2=
px; vertical-align: middle; margin-left: 1px; }

.d2h-file-name-wrapper { display: flex; -webkit-box-align: center; align-it=
ems: center; width: 100%; font-size: 15px; }

.d2h-file-name { white-space: nowrap; text-overflow: ellipsis; overflow-x: =
hidden; }

.d2h-file-wrapper { border: 1px solid var(--main-container-b); border-radiu=
s: 3px; margin-bottom: 1em; }

.d2h-file-collapse { justify-content: flex-end; display: none; cursor: poin=
ter; font-size: 12px; align-items: center; border-radius: 3px; border: 1px =
solid var(--collapse-b); padding: 4px 8px; }

.d2h-file-collapse.d2h-selected { background-color: var(--collapse-bg); }

.d2h-file-collapse-input { margin: 0px 4px 0px 0px; }

.d2h-diff-table { width: 100%; border-collapse: collapse; font-family: Menl=
o, Consolas, monospace; font-size: 13px; }

.d2h-files-diff { display: block; width: 100%; }

.d2h-file-diff { overflow-y: hidden; }

.d2h-file-side-diff { display: inline-block; overflow: scroll hidden; width=
: 50%; margin-right: -4px; margin-bottom: -8px; }

.d2h-code-line { display: inline-block; white-space: nowrap; user-select: n=
one; width: 100%; padding: 0px 8em; }

.d2h-code-side-line { display: inline-block; white-space: nowrap; user-sele=
ct: none; width: 100%; padding: 0px 4.5em; }

.d2h-code-line-ctn { display: inline-block; background: none; padding: 0px;=
 overflow-wrap: normal; white-space: pre; user-select: text; width: 100%; v=
ertical-align: middle; }

.d2h-code-line del, .d2h-code-side-line del { display: inline-block; margin=
-top: -1px; text-decoration: none; background-color: var(--line-sider-del-c=
ontent-bg); border-radius: 0.2em; vertical-align: middle; }

.d2h-code-line ins, .d2h-code-side-line ins { display: inline-block; margin=
-top: -1px; text-decoration: none; background-color: var(--line-sider-ins-c=
ontent-bg); border-radius: 0.2em; text-align: left; vertical-align: middle;=
 }

.d2h-code-line-prefix { display: inline; background: none; padding: 0px; ov=
erflow-wrap: normal; white-space: pre; }

.line-num1 { box-sizing: border-box; float: left; width: 3.5em; overflow: h=
idden; text-overflow: ellipsis; padding: 0px 0.5em; }

.line-num2 { box-sizing: border-box; float: right; width: 3.5em; overflow: =
hidden; text-overflow: ellipsis; padding: 0px 0.5em; }

.d2h-code-linenumber { box-sizing: border-box; width: 7.5em; position: abso=
lute; display: inline-block; background-color: var(--left-code-line-bg); co=
lor: var(--left-code-line-c); text-align: right; border-top-color: ; border=
-top-style: ; border-right-color: ; border-right-style: ; border-bottom-col=
or: ; border-bottom-style: ; border-left-color: ; border-left-style: ; bord=
er-image-source: ; border-image-slice: ; border-image-width: ; border-image=
-outset: ; border-image-repeat: ; border-width: 0px 1px; cursor: pointer; }

.d2h-code-linenumber::after { content: "=E2=80=8B"; }

.d2h-code-side-linenumber { position: absolute; display: inline-block; box-=
sizing: border-box; width: 4em; background-color: var(--left-code-line-bg);=
 color: var(--left-code-line-c); text-align: right; border-top-color: ; bor=
der-top-style: ; border-right-color: ; border-right-style: ; border-bottom-=
color: ; border-bottom-style: ; border-left-color: ; border-left-style: ; b=
order-image-source: ; border-image-slice: ; border-image-width: ; border-im=
age-outset: ; border-image-repeat: ; border-width: 0px 1px; cursor: pointer=
; overflow: hidden; text-overflow: ellipsis; padding: 0px 0.5em; }

.d2h-code-side-linenumber::after { content: "=E2=80=8B"; }

.d2h-code-side-emptyplaceholder, .d2h-emptyplaceholder { background-color: =
var(--empty-emptyplaceholder-bg); border-color: var(--empty-emptyplaceholde=
r-b); }

.d2h-code-linenumber, .d2h-code-side-linenumber, .d2h-code-line-prefix, .d2=
h-emptyplaceholder { user-select: none; }

.d2h-code-linenumber, .d2h-code-side-linenumber { direction: rtl; }

.d2h-del { background-color: var(--del-full-line-bg); border-color: var(--d=
el-full-line-b); }

.d2h-ins { background-color: var(--ins-full-line-bg); border-color: var(--i=
ns-full-line-b); }

.d2h-info { background-color: var(--info-full-line-bg); color: var(--info-f=
ull-line-c); border-color: var(--info-full-line-b); }

.d2h-file-diff .d2h-del.d2h-change { background-color: var(--del-change-bg)=
; }

.d2h-file-diff .d2h-ins.d2h-change { background-color: var(--ins-change-bg)=
; }

.d2h-file-list-wrapper { margin-bottom: 10px; }

.d2h-file-list-wrapper a { text-decoration: none; color: var(--text-a); }

.d2h-file-list-wrapper a:visited { color: var(--text-a); }

.d2h-file-list-header { text-align: left; }

.d2h-file-list-title { font-weight: bold; }

.d2h-file-list-line { display: flex; text-align: left; }

.d2h-file-list { display: block; list-style: none; padding: 0px; margin: 0p=
x; }

.d2h-file-list > li { border-bottom: var(--li-bt) solid 1px; padding: 5px 1=
0px; margin: 0px; }

.d2h-file-list > li:last-child { border-bottom: none; }

.d2h-file-switch { display: none; font-size: 10px; cursor: pointer; }

.d2h-icon { vertical-align: middle; margin-right: 10px; fill: currentcolor;=
 }

.d2h-deleted { color: var(--del-tag-c); }

.d2h-added { color: var(--ins-tag-c); }

.d2h-changed { color: var(--change-tag-c); }

.d2h-moved { color: var(--move-tag-c); }

.d2h-tag { display: flex; font-size: 10px; margin-left: 5px; padding: 0px 2=
px; background-color: var(--tag-bg); }

.d2h-deleted-tag { border: var(--del-tag-c) 1px solid; }

.d2h-added-tag { border: var(--ins-tag-c) 1px solid; }

.d2h-changed-tag { border: var(--change-tag-c) 1px solid; }

.d2h-moved-tag { border: var(--move-tag-c) 1px solid; }
------MultipartBoundary--ZsgQWMp86sQeRHgtGTIEquPbggicGkcWaCMUKTzzJi----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-8bb63cc5-0913-4794-9f05-9fd988ff0b9a@mhtml.blink

@charset "utf-8";

hcfy-result.__hcfy__result__loaded__.__hcfy__result__both__ { border: 1px d=
otted; }
------MultipartBoundary--ZsgQWMp86sQeRHgtGTIEquPbggicGkcWaCMUKTzzJi----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://101.43.165.133:5173/src/assets/huggingface.png

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
+P8BAAD///bOyB5O9TejAAAAAElFTkSuQmCC

------MultipartBoundary--ZsgQWMp86sQeRHgtGTIEquPbggicGkcWaCMUKTzzJi----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: chrome-extension://oikmahiipjniocckomdccmplodldodja/normalize.css

@charset "utf-8";
=0A
------MultipartBoundary--ZsgQWMp86sQeRHgtGTIEquPbggicGkcWaCMUKTzzJi----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: chrome-extension://oikmahiipjniocckomdccmplodldodja/blueprint.css

@charset "utf-8";
=0A
------MultipartBoundary--ZsgQWMp86sQeRHgtGTIEquPbggicGkcWaCMUKTzzJi----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: chrome-extension://oikmahiipjniocckomdccmplodldodja/blueprint-select.css

@charset "utf-8";
=0A
------MultipartBoundary--ZsgQWMp86sQeRHgtGTIEquPbggicGkcWaCMUKTzzJi----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: chrome-extension://oikmahiipjniocckomdccmplodldodja/cropper.css

@charset "utf-8";
=0A
------MultipartBoundary--ZsgQWMp86sQeRHgtGTIEquPbggicGkcWaCMUKTzzJi------
